#!/bin/bash

ROOT=$(dirname $(dirname $(realpath $BASH_SOURCE[0])))
OLDWD=$PWD
cd $ROOT

CONTAINER_TAG=`cat ${ROOT}/bin/.container-tag`

if [ -v GITHUB_ACTIONS ]; then
  echo "ACTIONS"
  CONTAINER_PATH=${ROOT}/.singularity/image.sif
  HOME_PATH=${GITHUB_WORKSPACE}
  HOME_OPT="--home ${ROOT}/.home"
  SINGULARITY_CACHE=--disable-cache
else
  CONTAINER_PATH=${ROOT}/.singularity/image-$CONTAINER_TAG.sif
  HOME_PATH=${HOME}
  HOME_OPT="--bind ${ROOT}/.home:${HOME_PATH}"
  SINGULARITY_CACHE=
fi

if [ -f $ROOT/.git ]; then
  # if this is a worktree, need to add the parent git repo in, too
  GIT_PATH=`git rev-parse --git-common-dir | tr -d '\n' | xargs dirname`
  HOME_OPT="${HOME_OPT} --bind ${GIT_PATH}:${GIT_PATH}"
fi

if [ ! -d $ROOT/.home ]; then
  mkdir $ROOT/.home
fi

if [ ! -f ${CONTAINER_PATH} ]; then
 echo "Fetching container..."
  if [ ! -d "${ROOT}/.singularity" ]; then
    mkdir -p ${ROOT}/.singularity
  fi
  singularity pull ${SINGULARITY_CACHE} ${CONTAINER_PATH} oras://docker.io/riscvintl/spec-generator:$CONTAINER_TAG
fi

if [ ! -f $ROOT/.bundle/config ]; then
  OLDDIR=$PWD
  cd $ROOT
  singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle config set --local path ${ROOT}/.home/.gems
  singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle config set --local cache_path ${ROOT}/.home/.cache
  cd $OLDDIR
fi

if [ ! -d $ROOT/.home/.gems ]; then
  OLDDIR=$PWD
  cd $ROOT
  singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle install
  cd $OLDDIR
fi

if [ ! -f $ROOT/ext/riscv-opcodes/README.md ]; then
  git submodule update --init ext/riscv-opcodes
fi

if [[ ! -z "$DEVELOPMENT" && $DEVELOPMENT -eq 1 ]]; then
  if [ ! -d "${ROOT}/.home/.yard/gem_index"]; then
    singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle exec --gemfile ${ROOT}/Gemfile yard config --gem-install-yri
    singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle exec --gemfile ${ROOT}/Gemfile yard gems
    touch ${ROOT}/.stamps/dev_gems
  fi
fi

if [[ ! -z "$VSCODE" && $VSCODE -eq 1 ]]; then
  declare -a exts=(
    castwide.solargraph,
    redhat.vscode-yaml,
    onnovalkering.vscode-singularity,
    asciidoctor.asciidoctor-vscode
  )
  for ext in "${exts[@]}"; do
    ignore=`code --list-extensions | grep "${ext}"`
    if [ $? -eq 1 ]; then
      echo "Installing VS Code extension ${ext}"
      code --install-extension ${ext}
    else
      echo "Extension ${ext} already installed"
    fi
  done
fi

if [ ! -d ${ROOT}/node_modules ]; then
  singularity run ${HOME_OPT} ${CONTAINER_PATH} npm i
fi

BUNDLE="singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle"
RUBY="singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle exec ruby"
RAKE="singularity run ${HOME_OPT} ${CONTAINER_PATH} bundle exec rake"
NPM="singularity run ${HOME_OPT} ${CONTAINER_PATH} npm"
NPX="singularity run ${HOME_OPT} ${CONTAINER_PATH} npx"
NODE="singularity run ${HOME_OPT} ${CONTAINER_PATH} node"
