---
# yaml-language-server: $schema=../../../schemas/csr_schema.json
$schema: csr_schema.json#
kind: csr
name: vsiselect
long_name: Virtual Supervisor Indirect Register Select
address: 0x250
virtual_address: 0x250
priv_mode: VS
length: VSXLEN
definedBy: Smcsrind
description: |
  The `vsireg` CSR is a virtual supervisor-level alias register used to access
  register state indirectly, based on the index specified in the `vsiselect` CSR.
  This mechanism provides a scalable and efficient way to expose a large number
  of virtual supervisor-level registers without consuming contiguous CSR address
  space.

  The value held in `vsiselect` determines which internal register is accessed
  via `vsireg`. This allows for software to access register arrays by index rather
  than by fixed CSR numbers, enabling more compact and flexible register access
  patterns.

  When the value in `vsiselect` corresponds to a defined and implemented select
  value, the behavior of read and write accesses to `vsireg` is defined by the
  extension to which the `vsiselect` value is allocated. If the value in `vsiselect`
  is not supported, the behavior is UNSPECIFIED; however, it is recommended that
  implementations raise a virtual instruction exception to facilitate debugging
  and enable software emulation.

  This indirect access model helps virtual machines access CSR state without
  direct mapping of each CSR, reducing implementation complexity and preserving
  CSR encoding space.
fields:
  Data:
    location_rv32: 31-0
    location_rv64: 63-0
    type: RW
    description: |
      The data read from or written to the register selected by the current
      `vsiselect` value.
    reset_value(): return 0x0;
