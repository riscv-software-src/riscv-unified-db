# yaml-language-server: $schema=../../../schemas/csr_schema.json
$schema: csr_schema.json#
kind: csr
name: sireg3
long_name: Supervisor Indirect Register Alias 3
address: 0x153
priv_mode: S
length: SXLEN
definedBy: Sscsrind
description: |
  The `sireg3` CSR is a supervisor-level alias register used to access register state
  indirectly based on the value held in the `siselect` CSR. The `sireg3` CSR provides
  access to a window of indirectly addressed registers.

  The behavior of accesses to `sireg3` is determined by the value of `siselect`.
  If `siselect` holds a value that corresponds to an implemented register,
  the register is accessed as determined by the value of `siselect`.

  When `siselect` holds an unsupported value, access to `sireg3` is UNSPECIFIED,
  and implementations are encouraged to raise an illegal instruction exception
  to facilitate debugging or software emulation.

  This indirect access mechanism allows efficient access to an array of CSRs
  without allocating large contiguous blocks of CSR address space. It is useful
  for arrays such as performance counters and other register sets.

  [Note]
  It is recommended that implementations raise an illegal instruction exception for such
  accesses, to facilitate possible emulation (by M-mode) of these accesses.

  [Note]
  An extension is considered not to be implemented at supervisor level if machine level has
  disabled the extension for S-mode, such as by the settings of certain fields in CSR
  `menvcfg`, for example.
fields:
  Data:
    location_rv32: 31-0
    location_rv64: 63-0
    type: RW
    description: |
      The data read from or written to the register selected by the current `siselect` value.
    reset_value: UNDEFINED_LEGAL
sw_read(): |
