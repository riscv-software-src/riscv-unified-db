---
# yaml-language-server: $schema=../../../schemas/csr_schema.json
$schema: csr_schema.json#
kind: csr
name: siselect
long_name: Supervisor Indirect Register Select
address: 0x150
priv_mode: S
length: SXLEN
definedBy: Sscsrind
description: |
  The `siselect` CSR is a supervisor-level register used to select which indirectly
  accessed register is targeted via the `sireg*` alias CSRs. The `siselect` value acts
  as an index into an extension-defined space of registers, enabling access to a wide
  range of CSR-like state without consuming contiguous CSR numbers.

  This mechanism allows software to efficiently access arrays of register state
  through indexing, removing the need for large blocks of CSR address space and
  reducing software complexity. The `siselect` CSR is typically used alongside
  `sireg` through `sireg6` to access registers indirectly.

  The minimum supported value range for `siselect` is 0â€“0xFFF. Future extensions may
  define larger ranges. Values with the most significant bit set (bit SXLEN - 1 = 1)
  are reserved for custom use, while those with the MSB cleared are designated for
  standard usage and should only be used by ratified extensions.

  When `siselect` holds a value that is not implemented, accesses to `sireg*` are
  UNSPECIFIED. It is RECOMMENDED that implementations raise an illegal instruction
  exception in such cases to support emulation or error detection. Implementations
  may make additional behaviors subject to platform or profile specifications.

fields:
  Select Value:
    location_rv32: 31-0
    location_rv64: 63-0
    type: RW
    description: |
      Index value selecting the target register accessed through `sireg*`.
      Acts as an indirect register selector. Values are extension-defined.
    reset_value(): return 0x0;
