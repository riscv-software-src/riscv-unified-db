# yaml-language-server: $schema=../../../schemas/csr_schema.json

# WARNING: This file is auto-generated from arch/csr/Zihpm/hpmcounterN.layout



hpmcounter3:
  long_name: Cycle counter for RDCYCLE Instruction
  address: 0xC03
  description: |
    Alias for M-mode CSR `mhpmcounter3`.

    Privilege mode access is controlled with `mcounteren.HPM3`, `scounteren.HPM3`, and `hcounteren.HPM3` as follows:

    [%autowidth,cols="1,1,1,1,1,1,1",separator="!"]
    !===
    .2+h![.rotate]#`mcounteren.HPM3`# .2+h! [.rotate]#`scounteren.HPM3`# .2+h! [.rotate]#`hcounteren.HPM3`#
    4+^.>h! `hpmcounter3` behavior
    .^h! S-mode .^h! U-mode .^h! VS-mode .^h! VU-mode

    ! 0 ! - ! - ! `IllegalInstruction` ! `IllegalInstruction` ! `IllegalInstruction` ! `IllegalInstruction` 
    ! 1 ! 0 ! 0 ! read-only ! `IllegalInstruction` ! `VirtualInstruction` ! `VirtualInstruction`
    ! 1 ! 1 ! 0 ! read-only ! read-only ! `VirtualInstruction` ! `VirtualInstruction` 
    ! 1 ! 0 ! 1 ! read-only ! `IllegalInstruction` ! read-only ! `VirtualInstruction` 
    ! 1 ! 1 ! 1 ! read-only ! read-only ! read-only ! read-only
    !===
  priv_mode: U
  length: 64
  definedBy: Zihpm
  fields:
    COUNT:
      location: 63-0
      alias: mhpmcounter3.COUNT
      description: Alias of `mhpmcounter3.COUNT`.
      type: RO-H
      reset_value: UNDEFINED_LEGAL
  sw_read(): |
    # access is determined by *counteren CSRs
    if (mode() == PrivilegeMode::S) {
      # S-mode is present ->
      #   mcounteren determines access in S-mode
      if (CSR[mcounteren].HPM3 == 1'b0) {
        raise(ExceptionCode::IllegalInstruction, $encoding);
      }
    } else if (mode() == PrivilegeMode::U) {
      if (CSR[misa].S == 1'b1) {
        # S-mode is present ->
        #   mcounteren and scounteren together determine access in U-mode
        if ((CSR[mcounteren].HPM3 & CSR[scounteren].HPM3) == 1'b0)) {
          raise(ExceptionCode::IllegalInstruction, $encoding);
        }
      } else if (CSR[mcounteren].HPM3 == 1'b0) {
        # S-mode is not present ->
        #   mcounteren determines access in U-mode
        raise(ExceptionCode::IllegalInstruction, $encoding);
      }
    } else if (mode() == PrivilegeMode::VS) {
      # access in VS mode
      if (CSR[hcounteren].HPM3 == 1'b0 && CSR[mcounteren] == 1'b1) {
        raise(ExceptionCode::VirtualInstruction, $encoding);
      } else if (CSR[mcounteren].HPM3 == 1'b0) {
        raise(ExceptionCode::IllegalInstruction, $encoding);
      }
    } else if (mode() == PrivilegeMode::VU) {
      # access in VU mode
      if (((CSR[hcounteren].HPM3 & CSR[scounteren].HPM3) == 1'b0) && (CSR[mcounteren].HPM3 == 1'b1)) {
        raise(ExceptionCode::VirtualInstruction, $encoding);
      } else if ((CSR[mcounteren].HPM3 == 1'b0) {
        raise(ExceptionCode::IllegalInstruction, $encoding);
      }
    }

    return read_hpm_counter(3);
