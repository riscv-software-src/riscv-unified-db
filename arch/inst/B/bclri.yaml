# yaml-language-server: $schema=../../../schemas/inst_schema.json

bclri:
  long_name: Single-Bit clear (Immediate)
  description: |
    This instruction returns rs1 with a single bit cleared at the index specified in shamt. The
    index is read from the lower log2(XLEN) bits of shamt. For RV32, the encodings corresponding
    to shamt[5]=1 are reserved.
  definedBy:
    anyOf: [B, Zbs]
  assembly: xd, xs1, shamt
  encoding:
    RV32:
      match: 0100100----------001-----0010011
      variables:
      - name: shamt
        location: 24-20
      - name: rs1
        location: 19-15
      - name: rd
        location: 11-7
    RV64:
      match: 010010-----------001-----0010011
      variables:
      - name: shamt
        location: 25-20
      - name: rs1
        location: 19-15
      - name: rd
        location: 11-7
  access:
    s: always
    u: always
    vs: always
    vu: always
  operation(): |
    if (implemented?(ExtensionName::B) && (CSR[misa].B == 1'b0)) {
      raise (ExceptionCode::IllegalInstruction, mode(), $encoding);
    }

    XReg index = shamt & (xlen() - 1);
    X[rd] = X[rs1] & ~(1 << index);



  sail(): |
    {
      let rs1_val = X(rs1);
      let mask : xlenbits = if sizeof(xlen) == 32
                            then zero_extend(0b1) << shamt[4..0]
                            else zero_extend(0b1) << shamt;
      let result : xlenbits = match op {
        RISCV_BCLRI => rs1_val & ~(mask),
        RISCV_BEXTI => zero_extend(bool_to_bits((rs1_val & mask) != zeros())),
        RISCV_BINVI => rs1_val ^ mask,
        RISCV_BSETI => rs1_val | mask
      };
      X(rd) = result;
      RETIRE_SUCCESS
    }
  
  


