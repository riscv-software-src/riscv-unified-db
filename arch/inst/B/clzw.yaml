# yaml-language-server: $schema=../../../schemas/inst_schema.json

clzw:
  long_name: Count leading zero bits in word
  description: |
    This instruction counts the number of 0's before the first 1 starting at bit 31 and progressing to bit 0.
    Accordingly, if the least-significant word is 0, the output is 32, and if the most-significant
    bit of the word (_i.e._, bit 31) is a 1, the output is 0.
  base: 64
  definedBy: [B, Zbb]
  assembly: xd, xs1
  encoding:
    match: 011000000000-----001-----0011011
    variables:
    - name: rs1
      location: 19-15
    - name: rd
      location: 11-7
  access:
    s: always
    u: always
    vs: always
    vu: always
  operation(): |
    if (implemented?(ExtensionName::B) && (CSR[misa].B == 1'b0)) {
      raise (ExceptionCode::IllegalInstruction, $encoding);
    }

    X[rd] = 31 - $signed(highest_set_bit(X[rs1][31:0]));
