# yaml-language-server: $schema=../../../schemas/inst_schema.json

rori:
  long_name: Rotate right (Immediate)
  description: |
    This instruction performs a rotate right of rs1 by the amount in the least-significant log2(XLEN) bits of shamt.
    For RV32, the encodings corresponding to shamt[5]=1 are reserved.
  definedBy:
    anyOf: [B, Zbb, Zbkb]
  assembly: xd, xs1, shamt
  encoding:
    RV32:
      match: 0110000----------101-----0110011
      variables:
      - name: shamt
        location: 24-20
      - name: rs1
        location: 19-15
      - name: rd
        location: 11-7
    RV64:
      match: 011000-----------101-----0110011
      variables:
      - name: shamt
        location: 25-20
      - name: rs1
        location: 19-15
      - name: rd
        location: 11-7
  access:
    s: always
    u: always
    vs: always
    vu: always
  data_independent_timing: true
  operation(): |
    if (implemented?(ExtensionName::B) && (CSR[misa].B == 1'b0)) {
      raise (ExceptionCode::IllegalInstruction, mode(), $encoding);
    }

    XReg shamt = (xlen() == 32) ? shamt[4:0] : shamt[5:0];

    X[rd] = (X[rs1] >> shamt) | (X[rs1] << (xlen() - shamt));



  sail(): |
    {
      let rs1_val = X(rs1);
      let result : xlenbits = if sizeof(xlen) == 32
                              then rs1_val >>> shamt[4..0]
                              else rs1_val >>> shamt;
      X(rd) = result;
      RETIRE_SUCCESS
    }
  
  


