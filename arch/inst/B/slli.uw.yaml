# yaml-language-server: $schema=../../../schemas/inst_schema.json

slli.uw:
  long_name: Shift left unsigned word (Immediate)
  description: |
    This instruction takes the least-significant word of rs1, zero-extends it, and shifts it
    left by the immediate.

    [NOTE]
    This instruction is the same as `slli` with `zext.w` performed on rs1 before shifting.
  definedBy:
    anyOf: [B, Zba]
  base: 64
  encoding:
    match: 0000010----------001-----0011011
    variables:
    - name: shamt
      location: 24-20
    - name: rs1
      location: 19-15
    - name: rd
      location: 11-7
  assembly: xd, xs1, shamt
  access:
    s: always
    u: always
    vs: always
    vu: always
  operation(): |
    if (implemented?(ExtensionName::B) && (CSR[misa].B == 1'b0)) {
      raise (ExceptionCode::IllegalInstruction, mode(), $encoding);
    }

    X[rd] = X[rs1][31:0] << shamt;



  sail(): |
    {
      let rs1_val = X(rs1);
      let result : xlenbits = zero_extend(rs1_val[31..0]) << shamt;
      X(rd) = result;
      RETIRE_SUCCESS
    }
  
  


