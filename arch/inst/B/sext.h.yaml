# yaml-language-server: $schema=../../../schemas/inst_schema.json

sext.h:
  long_name: Sign-extend halfword
  description: |
    This instruction sign-extends the least-significant halfword in the source to XLEN by copying the
    most-significant bit in the halfword (i.e., bit 15) to all of the more-significant bits.
  definedBy:
    anyOf: [B, Zbb]
  assembly: xd, xs1
  encoding:
    match: 011000000101-----001-----0010011
    variables:
    - name: rs1
      location: 19-15
    - name: rd
      location: 11-7
  access:
    s: always
    u: always
    vs: always
    vu: always
  operation(): |
    if (implemented?(ExtensionName::B) && (CSR[misa].B == 1'b0)) {
      raise (ExceptionCode::IllegalInstruction, mode(), $encoding);
    }

    if (xlen() == 32) {
      X[rd] = {{16{X[rs1][15]}}, X[rs1][15:0]};
    } else if (xlen() == 64) {
      X[rd] = {{48{X[rs1][15]}}, X[rs1][15:0]};
    }



  sail(): |
    {
      let rs1_val = X(rs1);
      let result : xlenbits = match op {
        RISCV_SEXTB => sign_extend(rs1_val[7..0]),
        RISCV_SEXTH => sign_extend(rs1_val[15..0]),
        RISCV_ZEXTH => zero_extend(rs1_val[15..0])
      };
      X(rd) = result;
      RETIRE_SUCCESS
    }
  
  


