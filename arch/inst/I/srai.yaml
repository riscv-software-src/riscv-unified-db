# yaml-language-server: $schema=../../../schemas/inst_schema.json

srai:
  long_name: Shift right arithmetic immediate
  description: |
    Arithmetic shift (the original sign bit is copied into the vacated upper bits) the
    value in rs1 right by shamt, and store the result in rd.
  definedBy: I
  assembly: xd, xs1, shamt
  encoding:
    RV32:
      match: 0100000----------101-----0010011
      variables:
      - name: shamt
        location: 24-20
      - name: rs1
        location: 19-15
      - name: rd
        location: 11-7
    RV64:
      match: 010000-----------101-----0010011
      variables:
      - name: shamt
        location: 25-20
      - name: rs1
        location: 19-15
      - name: rd
        location: 11-7
  access:
    s: always
    u: always
    vs: always
    vu: always
  data_independent_timing: true
  operation(): |
    # shamt is between 0-63
    X[rd] = X[rs1] >>> shamt;



  sail(): |
    {
      let rs1_val = X(rs1);
      /* the decoder guard should ensure that shamt[5] = 0 for RV32 */
      let result : xlenbits = match op {
        RISCV_SLLI => if   sizeof(xlen) == 32
                      then rs1_val << shamt[4..0]
                      else rs1_val << shamt,
        RISCV_SRLI => if   sizeof(xlen) == 32
                      then rs1_val >> shamt[4..0]
                      else rs1_val >> shamt,
        RISCV_SRAI => if   sizeof(xlen) == 32
                      then shift_right_arith32(rs1_val, shamt[4..0])
                      else shift_right_arith64(rs1_val, shamt)
      };
      X(rd) = result;
      RETIRE_SUCCESS
    }
  
  


