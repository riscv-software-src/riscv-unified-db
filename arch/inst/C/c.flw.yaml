# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: c.flw
long_name: Load single-precision
description: |
  Loads a single precision floating-point value from memory into register rd.
  It computes an effective address by adding the zero-extended offset, scaled by 4,
  to the base address in register rs1.
  It expands to `flw` `rd, offset(rs1)`.
definedBy:
  allOf:
    - C
    - F
assembly: xd, imm(xs1)
encoding:
  match: 011-----------00
  variables:
    - name: imm
      location: 5|12-10|6
      left_shift: 2
    - name: rd
      location: 4-2
    - name: rs1
      location: 9-7
access:
  s: always
  u: always
  vs: always
  vu: always
operation(): |
  if (implemented?(ExtensionName::C) && (CSR[misa].C == 1'b0)) {
    raise(ExceptionCode::IllegalInstruction, mode(), $encoding);
  }

  XReg virtual_address = X[rs1] + imm;

  X[rd] = sext(read_memory<32>(virtual_address, $encoding), 32);
