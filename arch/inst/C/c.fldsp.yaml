# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: c.fldsp
long_name: Load doubleword into floating-point register from stack
description: |
  Loads a double-precision floating-point value from memory into floating-point register rd.
  It computes its effective address by adding the zero-extended offset, scaled by 8,
  to the stack pointer, x2.
  It expands to `fld` `rd, offset(x2)`.
definedBy:
  allOf:
    - C
    - D
assembly: fd, imm(sp)
encoding:
  match: 001-----------10
  variables:
    - name: imm
      location: 4-2|12|6-5
      left_shift: 3
    - name: rd
      location: 11-7
access:
  s: always
  u: always
  vs: always
  vu: always
operation(): |
  if (implemented?(ExtensionName::C) && (CSR[misa].C == 1'b0)) {
    raise(ExceptionCode::IllegalInstruction, mode(), $encoding);
  }
  if (implemented?(ExtensionName::D) && (CSR[misa].D == 1'b0)) {
    raise(ExceptionCode::IllegalInstruction, mode(), $encoding);
  }

  XReg virtual_address = X[2] + imm;

  f[rd] = read_memory<64>(virtual_address, $encoding);
