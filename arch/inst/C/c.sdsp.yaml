# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: c.sdsp
long_name: Store doubleword to stack
description: |
  Stores a 64-bit value in register rs2 to memory.
  It computes an effective address by adding the zero-extended offset, scaled by 8,
  to the stack pointer, x2.
  It expands to `sd` `rs2, offset(x2)`.
definedBy:
  anyOf:
    - C
    - Zca
base: 64
assembly: xs2, imm(sp)
encoding:
  match: 111-----------10
  variables:
    - name: imm
      location: 9-7|12-10
      left_shift: 3
    - name: rs2
      location: 6-2
access:
  s: always
  u: always
  vs: always
  vu: always
operation(): |
  if (implemented?(ExtensionName::C) && (CSR[misa].C == 1'b0)) {
    raise(ExceptionCode::IllegalInstruction, mode(), $encoding);
  }

  XReg virtual_address = X[2] + imm;

  write_memory<64>(virtual_address, X[rs2], $encoding);
