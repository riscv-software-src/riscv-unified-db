---
# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: amocas.w
long_name: Atomic Compare-and-Swap Word
description: |
  Atomically loads a 32-bit value from memory, compares it with a 32-bit
  register value, and swaps if equal.

  **RV32 & RV64 Operation:**
  - Atomically loads a 32-bit value from the memory address in rs1.
  - Compares the loaded value with the lower 32 bits of rd.
  - If the comparison is bitwise equal, stores the lower 32 bits of rs2
    back to rs1.
  - Updates rd with the loaded value.
  - In RV64, rd is sign-extended to 64 bits.

  **Additional Considerations:**
  - A FENCE instruction may be used to enforce ordering between the memory
    read and, if produced, the memory write performed by AMOCAS.W.
  - If AMOCAS.W fails, it may either not perform a memory write or write
    back the old value loaded from memory.
  - The memory write, if performed, does not have release semantics,
    regardless of the rl bit.
  - Execution requires write permissions on the memory location.

  **Alignment Requirement:** 4-byte aligned.
  **Memory Semantics:** Supports acquire (aq) and release (rl) consistency.

definedBy: Zacas
assembly: xd, xs1, xs2, aq, rl
encoding:
  match: 00101------------010-----0101111
  variables:
    - name: aq
      location: 26-26
    - name: rl
      location: 25-25
    - name: rs2
      location: 24-20
    - name: rs1
      location: 19-15
    - name: rd
      location: 11-7
access:
  s: always
  u: always
  vs: always
  vu: always
data_independent_timing: false
operation(): |
  temp[31:0] = mem[X(rs1)]
  if (temp[31:0] == X(rd)[31:0])
      mem[X(rs1)] = X(rs2)[31:0]
  X(rd) = SignExtend(temp[31:0])
