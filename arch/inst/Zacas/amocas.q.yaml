---
# yaml-language-server: $schema=../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: amocas.q
long_name: Atomic Compare-and-Swap Quadword
description: |
  Atomically loads a 128-bit value from memory, compares it with a 128-bit
  register pair, and swaps if equal (RV64 only).

  **RV64 Operation:**
  - Atomically loads a 128-bit value from the memory address in rs1
    (split into rd and rd+1).
  - Compares the loaded value with the 128-bit value stored in the register
    pair rd and rd+1.
  - If the comparison is bitwise equal, stores the 128-bit value from the
    register pair rs2 and rs2+1 back to rs1.
  - Updates rd and rd+1 with the loaded value.

  **Additional Considerations:**
  - The first register in a pair must be even-numbered; encodings with
    odd-numbered registers in rd or rs2 are reserved.

definedBy: Zacas
base: 64
assembly: xd, xs1, xs2, aq, rl
encoding:
  match: 00101------------100-----0101111
  variables:
    - name: aq
      location: 26-26
    - name: rl
      location: 25-25
    - name: rs2
      location: 24-20
      not: [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31]
    - name: rs1
      location: 19-15
    - name: rd
      location: 11-7
      not: [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31]
access:
  s: always
  u: always
  vs: always
  vu: always
data_independent_timing: false
operation(): |
