name: Deploy pages
on:
  push:
    branches:
    - main
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  pages:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Clone Github Repo Action
      uses: actions/checkout@v4
    - name: Setup apptainer
      uses: eWaterCycle/setup-apptainer@v2.0.0
    - name: Get container from cache
      id: cache-sif
      uses: actions/cache@v3
      with:
        path: .singularity/image.sif
        key: ${{ hashFiles('container.def', 'bin/.container-tag') }}
    - name: Get gems and node files from cache
      id: cache-bundle-npm
      uses: actions/cache@v3
      with:
        path: |
          .home/.gems
          node_modules
        key: ${{ hashFiles('Gemfile.lock') }}-${{ hashFiles('package-lock.json') }}
    - if: ${{ steps.cache-sif.outputs.cache-hit != 'true' }}
      name: Build container
      run: ./bin/build_container
    - name: Setup project
      run: ./bin/setup
    - name: Build html documentation for generic_rv64
      run: ./do gen:html[generic_rv64]
    - name: Generate YARD docs
      run: ./do gen:tool_doc
    - name: Create _site
      run: mkdir -p _site
    - name: Copy cfg html
      run: cp -R gen/cfg_html_doc/generic_rv64/html _site
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '_site'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
