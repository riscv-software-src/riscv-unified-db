# riscv_info_udb -- Generated from RISC-V Unified Database
############################################
# SPDX-FileCopyrightText = "Qualcomm Technologies, Inc. and/or its subsidiaries."
# SPDX-License-Identifier = "BSD-3-Clause-Clear"
############################################

---
# Base architecture
flags:
  A: "Atomic instructions"
  B: "Bitmanipulation instructions"
  C: "Compressed instructions"
  D: "Double-precision floating-point"
  F: "Single-precision floating-point"
  H: "Hypervisor"
  I: "Base integer ISA (RV32I or RV64I)"
  M: "Integer multiply and divide instructions"
  Q: "Quad-Precision Floating-Point"
  S: "Supervisor mode"
  U: "User-mode privilege level"
  V: "Variable-length vector"
####

# Combinations of flags
shorthands:

####

# Known extensions
extensions:
  Sdext: "Debug"
  Sdtrig: "Debug triggers"
  Sha: "The augmented hypervisor extension"
  Shcounterenw: "Hypervisor counter enable"
  Shgatpa: "hgtap profile requirements"
  Shtvala: "htval profile requirements"
  Shvsatpa: "vstap translation mode requirements"
  Shvstvala: "vstval profile requirements"
  Shvstvecd: "vstvec profile requirements"
  Sm: "Machine mode"
  Smaia: "Advanced Interrupt Architecture, M-mode extension"
  Smcdeleg: "Performance counter delegation"
  Smcntrpmf: "Cycle and Instret Privilege Mode Filtering"
  Smcsrind: "Machine Indirect CSR Access (Smcsrind)"
  Smdbltrp: "Double trap"
  Smhpm: "M-mode programmable hardware performance counters"
  Smmpm: "Pointer masking for M-mode"
  Smnpm: "Pointer masking for next privilege level less than M-mode"
  Smpmp: "Physical Memory Protection"
  Smrnmi: "Resumable Non-Maskable Interrupts"
  Smstateen: "Machine-mode view of the state-enable extension"
  Ssaia: "Advanced Interrupt Architecture, S-mode extension"
  Ssccfg: "Supervisor-mode counter configuration"
  Ssccptr: "Cacheable and coherent main memory page table reads"
  Sscofpmf: "Counter Overflow and Privilege Mode Filtering"
  Sscounterenw: "Supervisor counter enable"
  Sscsrind: "Supervisor Indirect CSR Access (Sscsrind)"
  Ssdbltrp: "Double trap for supervisor mode"
  Ssnpm: "Pointer masking for next privilege level less than S-mode"
  Sspm: "Pointer masking available in supervisor mode"
  Ssqosid: "Quality-of-Service Identifiers"
  Ssstateen: "Supervisor-mode view of the state-enable extension"
  Ssstrict: "Unimplemented reserved encodings trap and no no-conforming extensions"
  Sstc: "Supervisor-mode timer interrupts"
  Sstvala: "`stval` requirements for RVA profiles"
  Sstvecd: "Direct exception vectoring"
  Ssu64xl: "64-bit UXLEN"
  Supm: "Pointer masking available in user mode"
  Sv32: "32-bit virtual address translation (3 level)"
  Sv39: "39-bit virtual address translation (3 level)"
  Sv48: "48-bit virtual address translation (4 level)"
  Sv57: "57-bit virtual address translation (5 level)"
  Svade: "Exception on PTE A/D Bits"
  Svadu: "Hardware Updating of PTE A/D Bits"
  Svbare: "Bare virtual addressing"
  Svinval: "Fine-grained address-translation cache invalidation"
  Svnapot: "Naturally-aligned Power of Two Translation Contiguity"
  Svpbmt: "Page-based memory types"
  Svvptc: "Guarantees visibility of PTE transitions from invalid to valid"
  Xmock: "Mock Extension (for testing database)"
  Za128rs: "Reservation set requirement for RVA profiles"
  Za64rs: "Reservation set requirement for RVA profiles"
  Zaamo: "Load-acquire/Store-release atomic instructions"
  Zabha: "Byte and Halfword Atomic Memory Operations"
  Zacas: "Atomic Compare-and-Swap (CAS) Instructions"
  Zalasr: "Atomic, Load-Acquire Store-Release"
  Zalrsc: "Atomic read-modify-write instructions"
  Zama16b: "Misaligned load/store/AMO within aligned 16-byte address are atomic"
  Zawrs: "Wait-on-Reservation-Set Instructions"
  Zba: "Address generation instructions"
  Zbb: "Basic bit manipulation"
  Zbc: "Carry-less multiplication scalar instructions"
  Zbkb: "Bit-manipulation for Cryptography"
  Zbkc: "Carry-less multiplication for Cryptography"
  Zbkx: "Crossbar permutations"
  Zbs: "Single-bit instructions"
  Zca: "C instructions excluding floating-point"
  Zcb: "Simple code-size saving instructions"
  Zcd: "Compressed instructions for double precision floating point"
  Zce: "Compressed instructions for microcontrollers"
  Zcf: "Compressed instructions for single precision floating point"
  Zclsd: "Compressed Load/Store Pair for RV32"
  Zcmop: "16-bit May-be Operations"
  Zcmp: "16-bit Push/Pop instructions"
  Zcmt: "16-bit Table Jump"
  Zfa: "Extension for Additional Floating-Point Instructions"
  Zfbfmin: "Scalar BF16 Converts"
  Zfh: "Half-precision floating point"
  Zfhmin: "Minimal half-precision Floating-point"
  Zhinx: "Half-precision floating-point instructions using integer registers"
  Zic64b: "64-byte cache blocks"
  Zicbom: "Cache block management instructions"
  Zicbop: "Cache block prefetch"
  Zicboz: "Cache block zero instruction"
  Ziccamoa: "Main memory atomicity requirement for RVA profiles"
  Ziccamoc: "Cacheable and coherent PMAs provide `AMOCASQ` level PMA support"
  Ziccif: "Main memory fetch requirement for RVA profiles"
  Zicclsm: "Main memory misaligned requirement for RVA profiles"
  Ziccrse: "Main memory reservability requirement for RVA profiles"
  Zicfilp: "Landing Pads"
  Zicfiss: "Shadow Stack"
  Zicntr: "Architectural performance counters"
  Zicond: "Integer Conditional Operations"
  Zicsr: "Control and status registers"
  Zifencei: "Instruction fence"
  Zihintntl: "NTL (Non-Temporal Locality) Hint Instructions"
  Zihintpause: "PAUSE instruction"
  Zihpm: "Programmable hardware performance counters"
  Zilsd: "Load/Store Pair for RV32"
  Zimop: "May-be Operations"
  Zk: "Standard Cryptography Extensions"
  Zkn: "NIST Algorithm Suite"
  Zknd: "NIST Suite: AES Decryption"
  Zkne: "NIST Suite: AES Encryption"
  Zknh: "NIST Suite: Hash Function Instructions"
  Zkr: "Entropy Source"
  Zks: "ShangMi Algorithm Suite"
  Zksed: "ShangMi Suite: SM4 Block Cipher Instructions"
  Zksh: "ShangMi Suite: SM3 Hash Function Instructions"
  Zkt: "Data-independent execution latency"
  Zmmul: "Integer multiplication instructions"
  Zvbb: "Vector Basic Bit-manipulation"
  Zvbc: "Vector Carryless Multiplication"
  Zve32f: "Vector Extension for Minimal Single-Precision Embedded Floating-Point"
  Zvfbfmin: "Vector BF16 Converts"
  Zvfbfwma: "Vector BF16 widening mul-add"
  Zvfh: "Vector Extension for Half-Precision Floating-Point"
  Zvfhmin: "Vector Extension for Minimal Half-Precision Floating-Point"
  Zvkb: "Vector Cryptography Bit-manipulation"
  Zvkg: "Vector GCM/GMAC"
  Zvkn: "NIST Algorithm Suite"
  Zvknc: "NIST Algorithm Suite with carryless multiply"
  Zvkned: "NIST Suite: Vector AES Block Cipher"
  Zvkng: "NIST Algorithm Suite with GCM"
  Zvknha: "NIST Suite: Vector SHA-2 Secure Hash (SHA-256)"
  Zvknhb: "NIST Suite: Vector SHA-2 Secure Hash (SHA-256 + SHA-512)"
  Zvks: "ShangMi Algorithm Suite"
  Zvksc: "ShangMi Algorithm Suite with carryless multiplication"
  Zvksed: "ShangMi Suite: SM4 Block Cipher"
  Zvksg: "ShangMi Algorithm Suite with GCM"
  Zvksh: "ShangMi Suite: SM3 Secure Hash"
  Zvkt: "Vector Data-Independent Execution Latency"
####

# Known profiles
profiles:
  MP-S-64:
    description: "S-mode extensions for a Mock 64-bit Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  MP-U-64:
    description: "U-mode extensions for a Mock 64-bit Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVA20S64:
    description: "S-mode extensions for version 20 of the 64-bit Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVA20U64:
    description: "U-mode extensions for version 20 of the 64-bit Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVA22S64:
    description: "S-mode extensions for version 22 of the 64-bit Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVA22U64:
    description: "U-mode extensions for version 22 of the 64-bit Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVA23M64:
    description: "M-mode extensions for version 23 of the 64-bit Apps Processor profile (not ratified)"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVA23S64:
    description: "S-mode extensions for version 23 of the 64-bit Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVA23U64:
    description: "U-mode extensions for version 23 of the 64-bit Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVB23M64:
    description: "M-mode extensions for version 23 of the 64-bit Bespoke Apps Processor profile (not ratified)"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVB23S64:
    description: "S-mode extensions for version 23 of the 64-bit Bespoke Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVB23U64:
    description: "U-mode extensions for version 23 of the 64-bit Bespoke Apps Processor profile"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVI20U32:
    description: "U-mode extensions for version 20 of a 32-bit processor"
    bits: 32
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
  RVI20U64:
    description: "U-mode extensions for version 20 of a 64-bit processor"
    bits: 64
    flags:
      mandatory:
      optional:
    extensions:
      mandatory:
      optional:
####

###
