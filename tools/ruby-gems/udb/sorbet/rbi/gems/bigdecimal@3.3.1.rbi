# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `bigdecimal` gem.
# Please instead update this file by running `bin/tapioca gem bigdecimal`.


# source://bigdecimal//lib/bigdecimal.rb#13
class BigDecimal < ::Numeric
  # source://bigdecimal//lib/bigdecimal.rb#77
  def **(y); end

  # source://bigdecimal//lib/bigdecimal.rb#97
  def power(y, prec = T.unsafe(nil)); end

  # source://bigdecimal//lib/bigdecimal.rb#211
  def sqrt(prec); end

  # source://bigdecimal//lib/bigdecimal/util.rb#110
  def to_d; end

  # source://bigdecimal//lib/bigdecimal/util.rb#90
  def to_digits; end
end

# source://bigdecimal//lib/bigdecimal.rb#14
module BigDecimal::Internal
  class << self
    # source://bigdecimal//lib/bigdecimal.rb#18
    def coerce_to_bigdecimal(x, prec, method_name); end

    # source://bigdecimal//lib/bigdecimal.rb#30
    def coerce_validate_prec(prec, method_name, accept_zero: T.unsafe(nil)); end

    # source://bigdecimal//lib/bigdecimal.rb#50
    def infinity_computation_result; end

    # source://bigdecimal//lib/bigdecimal.rb#57
    def nan_computation_result; end
  end
end

BigDecimal::VERSION = T.let(T.unsafe(nil), String)

# source://bigdecimal//lib/bigdecimal.rb#237
module BigMath
  class << self
    # source://bigdecimal//lib/bigdecimal.rb#328
    def exp(x, prec); end

    # source://bigdecimal//lib/bigdecimal.rb#251
    def log(x, prec); end

    private

    # source://bigdecimal//lib/bigdecimal.rb#306
    def _exp_taylor(x, prec); end
  end
end

# source://bigdecimal//lib/bigdecimal/util.rb#141
class Complex < ::Numeric
  # source://bigdecimal//lib/bigdecimal/util.rb#164
  def to_d(precision = T.unsafe(nil)); end
end

# source://bigdecimal//lib/bigdecimal/util.rb#116
class Rational < ::Numeric
  # source://bigdecimal//lib/bigdecimal/util.rb#135
  def to_d(precision = T.unsafe(nil)); end
end
