# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `tty-markdown` gem.
# Please instead update this file by running `bin/tapioca gem tty-markdown`.


# source://tty-markdown//lib/tty/markdown/kramdown_ext.rb#5
module Kramdown
  class << self
    # source://kramdown/2.5.1/lib/kramdown/document.rb#49
    def data_dir; end
  end
end

# source://tty-markdown//lib/tty/markdown/kramdown_ext.rb#6
module Kramdown::Parser; end

# source://tty-markdown//lib/tty/markdown/kramdown_ext.rb#7
class Kramdown::Parser::KramdownExt < ::Kramdown::Parser::Kramdown
  # source://tty-markdown//lib/tty/markdown/kramdown_ext.rb#8
  def initialize(source, options); end
end

# source://tty-markdown//lib/tty/markdown/kramdown_ext.rb#17
Kramdown::Parser::KramdownExt::FENCED_CODEBLOCK_MATCH = T.let(T.unsafe(nil), Regexp)

# source://tty-markdown//lib/tty/markdown/kramdown_ext.rb#16
Kramdown::Parser::KramdownExt::FENCED_CODEBLOCK_START = T.let(T.unsafe(nil), Regexp)

# source://tty-markdown//lib/tty/markdown/syntax_highlighter.rb#6
module TTY; end

# source://tty-markdown//lib/tty/markdown/syntax_highlighter.rb#7
module TTY::Markdown
  private

  # source://tty-markdown//lib/tty/markdown.rb#192
  def build_symbols(symbols); end

  # source://tty-markdown//lib/tty/markdown.rb#228
  def build_theme(theme); end

  # source://tty-markdown//lib/tty/markdown.rb#175
  def color_enabled(color); end

  # source://tty-markdown//lib/tty/markdown.rb#126
  def parse(source, color: T.unsafe(nil), indent: T.unsafe(nil), mode: T.unsafe(nil), symbols: T.unsafe(nil), theme: T.unsafe(nil), width: T.unsafe(nil), **doc_opts); end

  # source://tty-markdown//lib/tty/markdown.rb#162
  def parse_file(path, **options); end

  # source://tty-markdown//lib/tty/markdown.rb#214
  def select_symbols(name); end

  class << self
    # source://tty-markdown//lib/tty/markdown.rb#126
    def parse(source, color: T.unsafe(nil), indent: T.unsafe(nil), mode: T.unsafe(nil), symbols: T.unsafe(nil), theme: T.unsafe(nil), width: T.unsafe(nil), **doc_opts); end

    # source://tty-markdown//lib/tty/markdown.rb#162
    def parse_file(path, **options); end

    private

    # source://tty-markdown//lib/tty/markdown.rb#192
    def build_symbols(symbols); end

    # source://tty-markdown//lib/tty/markdown.rb#228
    def build_theme(theme); end

    # source://tty-markdown//lib/tty/markdown.rb#175
    def color_enabled(color); end

    # source://tty-markdown//lib/tty/markdown.rb#214
    def select_symbols(name); end
  end
end

# source://tty-markdown//lib/tty/markdown.rb#51
TTY::Markdown::ASCII_SYMBOLS = T.let(T.unsafe(nil), Hash)

# source://tty-markdown//lib/tty/markdown/converter.rb#14
class TTY::Markdown::Converter < ::Kramdown::Converter::Base
  # source://tty-markdown//lib/tty/markdown/converter.rb#18
  def initialize(root, options = T.unsafe(nil)); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#36
  def convert(el, opts = T.unsafe(nil)); end

  private

  # source://tty-markdown//lib/tty/markdown/converter.rb#477
  def border(column_widths, location); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#641
  def convert_a(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#695
  def convert_abbreviation(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#208
  def convert_blank(*_arg0); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#264
  def convert_blockquote(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#615
  def convert_br(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#251
  def convert_codeblock(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#232
  def convert_codespan(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#803
  def convert_comment(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#335
  def convert_dd(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#284
  def convert_dl(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#321
  def convert_dt(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#192
  def convert_em(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#708
  def convert_entity(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#725
  def convert_footnote(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#104
  def convert_header(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#627
  def convert_hr(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#770
  def convert_html_element(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#751
  def convert_img(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#301
  def convert_li(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#679
  def convert_math(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#284
  def convert_ol(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#131
  def convert_p(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#739
  def convert_raw(*_arg0); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#69
  def convert_root(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#220
  def convert_smart_quote(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#176
  def convert_strong(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#353
  def convert_table(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#496
  def convert_tbody(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#586
  def convert_td(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#161
  def convert_text(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#529
  def convert_tfoot(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#453
  def convert_thead(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#545
  def convert_tr(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#704
  def convert_typographic_sym(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#284
  def convert_ul(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#803
  def convert_xml_comment(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#387
  def distribute_widths(widths); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#370
  def extract_table_data(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#84
  def footnotes_list(root, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#48
  def inner(el, opts); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#439
  def max_row_height(row, column_widths); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#428
  def max_row_heights(table_data, column_widths); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#417
  def max_width(table_data, col); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#406
  def max_widths(table_data); end

  # source://tty-markdown//lib/tty/markdown/converter.rb#713
  def unicode_char(codepoint); end
end

# source://tty-markdown//lib/tty/markdown/converter.rb#15
TTY::Markdown::Converter::NEWLINE = T.let(T.unsafe(nil), String)

# source://tty-markdown//lib/tty/markdown/converter.rb#16
TTY::Markdown::Converter::SPACE = T.let(T.unsafe(nil), String)

# source://tty-markdown//lib/tty/markdown.rb#16
TTY::Markdown::SYMBOLS = T.let(T.unsafe(nil), Hash)

# source://tty-markdown//lib/tty/markdown/syntax_highlighter.rb#11
module TTY::Markdown::SyntaxHighliter
  private

  # source://tty-markdown//lib/tty/markdown/syntax_highlighter.rb#17
  def available_lexers; end

  # source://tty-markdown//lib/tty/markdown/syntax_highlighter.rb#33
  def guess_lang(code); end

  # source://tty-markdown//lib/tty/markdown/syntax_highlighter.rb#54
  def highlight(code, mode: T.unsafe(nil), lang: T.unsafe(nil), enabled: T.unsafe(nil), color: T.unsafe(nil)); end

  class << self
    # source://tty-markdown//lib/tty/markdown/syntax_highlighter.rb#17
    def available_lexers; end

    # source://tty-markdown//lib/tty/markdown/syntax_highlighter.rb#33
    def guess_lang(code); end

    # source://tty-markdown//lib/tty/markdown/syntax_highlighter.rb#54
    def highlight(code, mode: T.unsafe(nil), lang: T.unsafe(nil), enabled: T.unsafe(nil), color: T.unsafe(nil)); end
  end
end

# source://tty-markdown//lib/tty/markdown.rb#86
TTY::Markdown::THEME = T.let(T.unsafe(nil), Hash)

# source://tty-markdown//lib/tty/markdown/version.rb#5
TTY::Markdown::VERSION = T.let(T.unsafe(nil), String)
