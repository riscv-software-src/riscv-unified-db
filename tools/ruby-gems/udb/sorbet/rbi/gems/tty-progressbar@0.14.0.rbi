# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `tty-progressbar` gem.
# Please instead update this file by running `bin/tapioca gem tty-progressbar`.


# source://tty-progressbar//lib/tty/progressbar/configuration.rb#1
module TTY; end

# source://tty-progressbar//lib/tty/progressbar/configuration.rb#2
class TTY::ProgressBar
  include ::MonitorMixin
  extend ::Forwardable

  # source://tty-progressbar//lib/tty/progressbar.rb#67
  def initialize(format, options = T.unsafe(nil)); end

  # source://tty-progressbar//lib/tty/progressbar.rb#134
  def advance(progress = T.unsafe(nil), tokens = T.unsafe(nil)); end

  # source://tty-progressbar//lib/tty/progressbar.rb#112
  def attach_to(multibar); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def clear(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#358
  def clear_line; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def complete(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#368
  def complete?; end

  # source://tty-progressbar//lib/tty/progressbar.rb#28
  def current; end

  # source://tty-progressbar//lib/tty/progressbar.rb#215
  def current=(value); end

  # source://tty-progressbar//lib/tty/progressbar.rb#386
  def done?; end

  # source://tty-progressbar//lib/tty/progressbar.rb#323
  def finish; end

  # source://tty-progressbar//lib/tty/progressbar.rb#26
  def format; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def frequency(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def head(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def hide_cursor(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def incomplete(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#446
  def inspect; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def interval(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#184
  def iterate(collection, progress = T.unsafe(nil), &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#411
  def log(message); end

  # source://tty-progressbar//lib/tty/progressbar.rb#428
  def max_columns; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def mean_rate(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#267
  def move_to_row; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def no_width(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#398
  def on(name, &callback); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def output(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def rate(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#237
  def ratio; end

  # source://tty-progressbar//lib/tty/progressbar.rb#227
  def ratio=(value); end

  # source://tty-progressbar//lib/tty/progressbar.rb#247
  def render; end

  # source://tty-progressbar//lib/tty/progressbar.rb#88
  def reset; end

  # source://tty-progressbar//lib/tty/progressbar.rb#310
  def resize(new_width = T.unsafe(nil)); end

  # source://tty-progressbar//lib/tty/progressbar.rb#32
  def row; end

  # source://tty-progressbar//lib/tty/progressbar.rb#119
  def start; end

  # source://tty-progressbar//lib/tty/progressbar.rb#30
  def start_at; end

  # source://tty-progressbar//lib/tty/progressbar.rb#341
  def stop; end

  # source://tty-progressbar//lib/tty/progressbar.rb#377
  def stopped?; end

  # source://tty-progressbar//lib/tty/progressbar.rb#437
  def to_s; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def total(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#201
  def update(options = T.unsafe(nil)); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def use(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def width(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def width=(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar.rb#293
  def write(data, clear_first = T.unsafe(nil)); end

  private

  # source://tty-progressbar//lib/tty/progressbar.rb#477
  def emit(name, *args); end

  # source://tty-progressbar//lib/tty/progressbar.rb#463
  def padout(message); end

  # source://tty-progressbar//lib/tty/progressbar.rb#488
  def tty?; end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/bar.rb#8
class TTY::ProgressBar::BarFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/bar.rb#11
  def initialize(progress); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/bar.rb#32
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/bar.rb#22
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/bar.rb#9
TTY::ProgressBar::BarFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/formatter/current_byte.rb#10
class TTY::ProgressBar::ByteFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/current_byte.rb#13
  def initialize(progress); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/current_byte.rb#28
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/current_byte.rb#24
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/current_byte.rb#11
TTY::ProgressBar::ByteFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/formatter/byte_rate.rb#10
class TTY::ProgressBar::ByteRateFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/byte_rate.rb#13
  def initialize(progress); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/byte_rate.rb#34
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/byte_rate.rb#24
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/byte_rate.rb#11
TTY::ProgressBar::ByteRateFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar.rb#24
TTY::ProgressBar::CURSOR_LOCK = T.let(T.unsafe(nil), Monitor)

# source://tty-progressbar//lib/tty/progressbar/configuration.rb#3
class TTY::ProgressBar::Configuration
  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#27
  def initialize(options); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#19
  def clear; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#19
  def clear=(_arg0); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#13
  def complete; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#13
  def complete=(_arg0); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#23
  def frequency; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#23
  def frequency=(_arg0); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#15
  def head; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#15
  def head=(_arg0); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#17
  def hide_cursor; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#17
  def hide_cursor=(_arg0); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#11
  def incomplete; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#11
  def incomplete=(_arg0); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#25
  def interval; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#25
  def interval=(_arg0); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#9
  def no_width; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#9
  def no_width=(_arg0); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#21
  def output; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#21
  def output=(_arg0); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#5
  def total; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#41
  def total=(value); end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#7
  def width; end

  # source://tty-progressbar//lib/tty/progressbar/configuration.rb#7
  def width=(_arg0); end
end

# source://tty-progressbar//lib/tty/progressbar/converter.rb#8
module TTY::ProgressBar::Converter
  private

  # source://tty-progressbar//lib/tty/progressbar/converter.rb#67
  def to_bytes(value, options = T.unsafe(nil)); end

  # source://tty-progressbar//lib/tty/progressbar/converter.rb#44
  def to_seconds(seconds, precision = T.unsafe(nil)); end

  # source://tty-progressbar//lib/tty/progressbar/converter.rb#17
  def to_time(seconds); end

  class << self
    # source://tty-progressbar//lib/tty/progressbar/converter.rb#67
    def to_bytes(value, options = T.unsafe(nil)); end

    # source://tty-progressbar//lib/tty/progressbar/converter.rb#44
    def to_seconds(seconds, precision = T.unsafe(nil)); end

    # source://tty-progressbar//lib/tty/progressbar/converter.rb#17
    def to_time(seconds); end
  end
end

# source://tty-progressbar//lib/tty/progressbar/converter.rb#50
TTY::ProgressBar::Converter::BYTE_UNITS = T.let(T.unsafe(nil), Array)

# source://tty-progressbar//lib/tty/progressbar/converter.rb#9
TTY::ProgressBar::Converter::HOURSECONDS = T.let(T.unsafe(nil), Integer)

# source://tty-progressbar//lib/tty/progressbar/formatter/current.rb#8
class TTY::ProgressBar::CurrentFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/current.rb#11
  def initialize(progress); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/current.rb#32
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/current.rb#22
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/current.rb#9
TTY::ProgressBar::CurrentFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar.rb#22
TTY::ProgressBar::ECMA_CSI = T.let(T.unsafe(nil), String)

# source://tty-progressbar//lib/tty/progressbar/formatter/elapsed.rb#10
class TTY::ProgressBar::ElapsedFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/elapsed.rb#13
  def initialize(progress); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/elapsed.rb#28
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/elapsed.rb#24
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/elapsed.rb#11
TTY::ProgressBar::ElapsedFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/formatter/estimated.rb#10
class TTY::ProgressBar::EstimatedFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/estimated.rb#13
  def initialize(progress); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/estimated.rb#28
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/estimated.rb#24
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/estimated.rb#11
TTY::ProgressBar::EstimatedFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/formatter.rb#20
class TTY::ProgressBar::Formatter
  extend ::Forwardable

  # source://tty-progressbar//lib/tty/progressbar/formatter.rb#26
  def initialize(pipeline = T.unsafe(nil)); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def decorate(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar/formatter.rb#33
  def load; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def use(*args, **_arg1, &block); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/mean_byte.rb#10
class TTY::ProgressBar::MeanByteFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/mean_byte.rb#13
  def initialize(progress); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/mean_byte.rb#34
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/mean_byte.rb#24
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/mean_byte.rb#11
TTY::ProgressBar::MeanByteFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/formatter/mean_rate.rb#10
class TTY::ProgressBar::MeanRateFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/mean_rate.rb#13
  def initialize(progress); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/mean_rate.rb#34
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/mean_rate.rb#24
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/mean_rate.rb#11
TTY::ProgressBar::MeanRateFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/meter.rb#9
class TTY::ProgressBar::Meter
  # source://tty-progressbar//lib/tty/progressbar/meter.rb#16
  def initialize(interval); end

  # source://tty-progressbar//lib/tty/progressbar/meter.rb#98
  def avg_rate; end

  # source://tty-progressbar//lib/tty/progressbar/meter.rb#111
  def clear; end

  # source://tty-progressbar//lib/tty/progressbar/meter.rb#98
  def mean_rate; end

  # source://tty-progressbar//lib/tty/progressbar/meter.rb#51
  def prune_samples(at); end

  # source://tty-progressbar//lib/tty/progressbar/meter.rb#75
  def rate; end

  # source://tty-progressbar//lib/tty/progressbar/meter.rb#88
  def rates; end

  # source://tty-progressbar//lib/tty/progressbar/meter.rb#41
  def sample(at, value); end

  # source://tty-progressbar//lib/tty/progressbar/meter.rb#62
  def save_rate(at); end

  # source://tty-progressbar//lib/tty/progressbar/meter.rb#24
  def start; end
end

# source://tty-progressbar//lib/tty/progressbar/multi.rb#13
class TTY::ProgressBar::Multi
  include ::Enumerable
  include ::MonitorMixin
  extend ::Forwardable

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#44
  def initialize(*args); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def [](*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#156
  def complete?; end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#145
  def current; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def each(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def empty?(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#183
  def finish; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def length(*args, **_arg1, &block); end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#197
  def line_inset(bar); end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#86
  def next_row; end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#98
  def observe(bar); end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#216
  def on(name, &callback); end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#107
  def progress_handler; end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#67
  def register(format, options = T.unsafe(nil)); end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#28
  def rows; end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#123
  def start; end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#176
  def stop; end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#167
  def stopped?; end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#117
  def top_bar; end

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#134
  def total; end

  private

  # source://tty-progressbar//lib/tty/progressbar/multi.rb#230
  def emit(name, *args); end
end

# source://tty-progressbar//lib/tty/progressbar/multi.rb#21
TTY::ProgressBar::Multi::DEFAULT_INSET = T.let(T.unsafe(nil), Hash)

# source://tty-progressbar//lib/tty/progressbar/formatter/percent.rb#8
class TTY::ProgressBar::PercentFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/percent.rb#11
  def initialize(progress, *args, &block); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/percent.rb#26
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/percent.rb#22
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/percent.rb#9
TTY::ProgressBar::PercentFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/pipeline.rb#6
class TTY::ProgressBar::Pipeline
  include ::Enumerable

  # source://tty-progressbar//lib/tty/progressbar/pipeline.rb#12
  def initialize(formatters = T.unsafe(nil)); end

  # source://tty-progressbar//lib/tty/progressbar/pipeline.rb#32
  def decorate(progress, tokenized); end

  # source://tty-progressbar//lib/tty/progressbar/pipeline.rb#47
  def each(&block); end

  # source://tty-progressbar//lib/tty/progressbar/pipeline.rb#23
  def use(formatter); end

  protected

  # source://tty-progressbar//lib/tty/progressbar/pipeline.rb#53
  def formatters; end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/rate.rb#10
class TTY::ProgressBar::RateFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/rate.rb#13
  def initialize(progress); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/rate.rb#34
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/rate.rb#24
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/rate.rb#11
TTY::ProgressBar::RateFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/formatter/total_byte.rb#10
class TTY::ProgressBar::TotalByteFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/total_byte.rb#13
  def initialize(progress, *args, &block); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/total_byte.rb#28
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/total_byte.rb#24
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/total_byte.rb#11
TTY::ProgressBar::TotalByteFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/formatter/total.rb#8
class TTY::ProgressBar::TotalFormatter
  # source://tty-progressbar//lib/tty/progressbar/formatter/total.rb#11
  def initialize(progress, *args, &block); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/total.rb#26
  def format(value); end

  # source://tty-progressbar//lib/tty/progressbar/formatter/total.rb#22
  def matches?(value); end
end

# source://tty-progressbar//lib/tty/progressbar/formatter/total.rb#9
TTY::ProgressBar::TotalFormatter::MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-progressbar//lib/tty/progressbar/version.rb#3
TTY::ProgressBar::VERSION = T.let(T.unsafe(nil), String)
