# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `tty-reader` gem.
# Please instead update this file by running `bin/tapioca gem tty-reader`.


# source://tty-reader//lib/tty/reader/history.rb#5
module TTY; end

# source://tty-reader//lib/tty/reader/history.rb#6
class TTY::Reader
  include ::Wisper::Publisher
  extend ::Wisper::Publisher::ClassMethods

  # source://tty-reader//lib/tty/reader.rb#79
  def initialize(input: T.unsafe(nil), output: T.unsafe(nil), interrupt: T.unsafe(nil), env: T.unsafe(nil), track_history: T.unsafe(nil), history_cycle: T.unsafe(nil), history_exclude: T.unsafe(nil), history_duplicates: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#433
  def add_to_history(line); end

  # source://tty-reader//lib/tty/reader.rb#343
  def clear_display(line, screen_width); end

  # source://tty-reader//lib/tty/reader.rb#55
  def console; end

  # source://tty-reader//lib/tty/reader.rb#362
  def count_screen_lines(line_or_size, screen_width = T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#57
  def cursor; end

  # source://tty-reader//lib/tty/reader.rb#50
  def env; end

  # source://tty-reader//lib/tty/reader.rb#209
  def get_codes(echo: T.unsafe(nil), raw: T.unsafe(nil), nonblock: T.unsafe(nil), codes: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#441
  def history_next; end

  # source://tty-reader//lib/tty/reader.rb#437
  def history_next?; end

  # source://tty-reader//lib/tty/reader.rb#450
  def history_previous; end

  # source://tty-reader//lib/tty/reader.rb#446
  def history_previous?; end

  # source://tty-reader//lib/tty/reader.rb#46
  def input; end

  # source://tty-reader//lib/tty/reader.rb#460
  def inspect; end

  # source://tty-reader//lib/tty/reader.rb#428
  def keyctrl_d(*_arg0); end

  # source://tty-reader//lib/tty/reader.rb#428
  def keyctrl_z(*_arg0); end

  # source://wisper/2.0.1/lib/wisper/publisher.rb#13
  def old_subcribe(listener, options = T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#48
  def output; end

  # source://tty-reader//lib/tty/reader.rb#184
  def read_char(echo: T.unsafe(nil), raw: T.unsafe(nil), nonblock: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#184
  def read_keypress(echo: T.unsafe(nil), raw: T.unsafe(nil), nonblock: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#248
  def read_line(prompt = T.unsafe(nil), value: T.unsafe(nil), echo: T.unsafe(nil), raw: T.unsafe(nil), nonblock: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#393
  def read_lines(prompt = T.unsafe(nil), value: T.unsafe(nil), echo: T.unsafe(nil), raw: T.unsafe(nil), nonblock: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#393
  def read_multiline(prompt = T.unsafe(nil), value: T.unsafe(nil), echo: T.unsafe(nil), raw: T.unsafe(nil), nonblock: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#144
  def select_console(input); end

  # source://tty-reader//lib/tty/reader.rb#114
  def subscribe(listener, options = T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader.rb#52
  def track_history; end

  # source://tty-reader//lib/tty/reader.rb#52
  def track_history?; end

  # source://tty-reader//lib/tty/reader.rb#421
  def trigger(event, *args); end

  # source://tty-reader//lib/tty/reader.rb#160
  def unbufferred(&block); end

  # source://tty-reader//lib/tty/reader.rb#132
  def unsubscribe(listener); end

  private

  # source://tty-reader//lib/tty/reader.rb#483
  def handle_interrupt; end

  # source://tty-reader//lib/tty/reader.rb#474
  def trigger_key_event(char, line: T.unsafe(nil)); end

  class << self
    # source://tty-reader//lib/tty/reader.rb#42
    def windows?; end
  end
end

# source://tty-reader//lib/tty/reader.rb#26
TTY::Reader::BACKSPACE = T.let(T.unsafe(nil), Integer)

# source://tty-reader//lib/tty/reader.rb#24
TTY::Reader::CARRIAGE_RETURN = T.let(T.unsafe(nil), Integer)

# source://tty-reader//lib/tty/reader/console.rb#10
class TTY::Reader::Console
  # source://tty-reader//lib/tty/reader/console.rb#30
  def initialize(input); end

  # source://tty-reader//lib/tty/reader/console.rb#28
  def escape_codes; end

  # source://tty-reader//lib/tty/reader/console.rb#49
  def get_char(echo: T.unsafe(nil), raw: T.unsafe(nil), nonblock: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader/console.rb#21
  def keys; end

  protected

  # source://tty-reader//lib/tty/reader/console.rb#65
  def input; end

  # source://tty-reader//lib/tty/reader/console.rb#63
  def mode; end
end

# source://tty-reader//lib/tty/reader/console.rb#12
TTY::Reader::Console::CSI = T.let(T.unsafe(nil), String)

# source://tty-reader//lib/tty/reader/console.rb#11
TTY::Reader::Console::ESC = T.let(T.unsafe(nil), String)

# source://tty-reader//lib/tty/reader/console.rb#14
TTY::Reader::Console::TIMEOUT = T.let(T.unsafe(nil), Float)

# source://tty-reader//lib/tty/reader.rb#27
TTY::Reader::DELETE = T.let(T.unsafe(nil), Integer)

# source://tty-reader//lib/tty/reader.rb#30
TTY::Reader::EXIT_KEYS = T.let(T.unsafe(nil), Array)

# source://tty-reader//lib/tty/reader/history.rb#11
class TTY::Reader::History
  include ::Enumerable
  extend ::Forwardable

  # source://tty-reader//lib/tty/reader/history.rb#66
  def initialize(max_size = T.unsafe(nil), duplicates: T.unsafe(nil), cycle: T.unsafe(nil), exclude: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader/history.rb#94
  def <<(line); end

  # source://tty-reader//lib/tty/reader/history.rb#143
  def [](index); end

  # source://tty-reader//lib/tty/reader/history.rb#166
  def clear; end

  # source://tty-reader//lib/tty/reader/history.rb#38
  def cycle; end

  # source://tty-reader//lib/tty/reader/history.rb#38
  def cycle=(_arg0); end

  # source://tty-reader//lib/tty/reader/history.rb#45
  def duplicates; end

  # source://tty-reader//lib/tty/reader/history.rb#45
  def duplicates=(_arg0); end

  # source://tty-reader//lib/tty/reader/history.rb#81
  def each(&block); end

  # source://tty-reader//lib/tty/reader/history.rb#52
  def exclude; end

  # source://tty-reader//lib/tty/reader/history.rb#52
  def exclude=(_arg0); end

  # source://tty-reader//lib/tty/reader/history.rb#157
  def get; end

  # source://tty-reader//lib/tty/reader/history.rb#31
  def index; end

  # source://forwardable/1.3.3/forwardable.rb#231
  def inspect(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def length(*args, **_arg1, &block); end

  # source://tty-reader//lib/tty/reader/history.rb#24
  def max_size; end

  # source://tty-reader//lib/tty/reader/history.rb#24
  def max_size=(_arg0); end

  # source://tty-reader//lib/tty/reader/history.rb#109
  def next; end

  # source://tty-reader//lib/tty/reader/history.rb#119
  def next?; end

  # source://tty-reader//lib/tty/reader/history.rb#124
  def previous; end

  # source://tty-reader//lib/tty/reader/history.rb#134
  def previous?; end

  # source://tty-reader//lib/tty/reader/history.rb#94
  def push(line); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def size(*args, **_arg1, &block); end

  # source://forwardable/1.3.3/forwardable.rb#231
  def to_s(*args, **_arg1, &block); end
end

# source://tty-reader//lib/tty/reader/history.rb#19
TTY::Reader::History::DEFAULT_EXCLUDE = T.let(T.unsafe(nil), Proc)

# source://tty-reader//lib/tty/reader/history.rb#16
TTY::Reader::History::DEFAULT_SIZE = T.let(T.unsafe(nil), Integer)

# source://tty-reader//lib/tty/reader.rb#35
class TTY::Reader::InputInterrupt < ::Interrupt; end

# source://tty-reader//lib/tty/reader/key_event.rb#10
class TTY::Reader::Key < ::Struct
  # source://tty-reader//lib/tty/reader/key_event.rb#11
  def initialize(*_arg0); end
end

# source://tty-reader//lib/tty/reader/key_event.rb#19
class TTY::Reader::KeyEvent < ::Struct
  # source://tty-reader//lib/tty/reader/key_event.rb#53
  def trigger?; end

  class << self
    # source://tty-reader//lib/tty/reader/key_event.rb#29
    def from(keys, char, line = T.unsafe(nil)); end
  end
end

# source://tty-reader//lib/tty/reader/keys.rb#6
module TTY::Reader::Keys
  private

  # source://tty-reader//lib/tty/reader/keys.rb#7
  def ctrl_keys; end

  # source://tty-reader//lib/tty/reader/keys.rb#46
  def keys; end

  # source://tty-reader//lib/tty/reader/keys.rb#128
  def win_keys; end

  class << self
    # source://tty-reader//lib/tty/reader/keys.rb#7
    def ctrl_keys; end

    # source://tty-reader//lib/tty/reader/keys.rb#46
    def keys; end

    # source://tty-reader//lib/tty/reader/keys.rb#128
    def win_keys; end
  end
end

# source://tty-reader//lib/tty/reader/line.rb#7
class TTY::Reader::Line
  # source://tty-reader//lib/tty/reader/line.rb#40
  def initialize(text = T.unsafe(nil), prompt: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader/line.rb#204
  def <<(char); end

  # source://tty-reader//lib/tty/reader/line.rb#179
  def [](i); end

  # source://tty-reader//lib/tty/reader/line.rb#146
  def []=(i, chars); end

  # source://tty-reader//lib/tty/reader/line.rb#27
  def cursor; end

  # source://tty-reader//lib/tty/reader/line.rb#212
  def delete(n = T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader/line.rb#63
  def edit_mode; end

  # source://tty-reader//lib/tty/reader/line.rb#54
  def editing?; end

  # source://tty-reader//lib/tty/reader/line.rb#99
  def end?; end

  # source://tty-reader//lib/tty/reader/line.rb#197
  def insert(chars); end

  # source://tty-reader//lib/tty/reader/line.rb#230
  def inspect; end

  # source://tty-reader//lib/tty/reader/line.rb#106
  def left(n = T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader/line.rb#255
  def length; end

  # source://tty-reader//lib/tty/reader/line.rb#31
  def mode; end

  # source://tty-reader//lib/tty/reader/line.rb#127
  def move_to_end; end

  # source://tty-reader//lib/tty/reader/line.rb#120
  def move_to_start; end

  # source://tty-reader//lib/tty/reader/line.rb#35
  def prompt; end

  # source://tty-reader//lib/tty/reader/line.rb#238
  def prompt_size; end

  # source://tty-reader//lib/tty/reader/line.rb#222
  def remove(n = T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader/line.rb#188
  def replace(text); end

  # source://tty-reader//lib/tty/reader/line.rb#81
  def replace_mode; end

  # source://tty-reader//lib/tty/reader/line.rb#72
  def replacing?; end

  # source://tty-reader//lib/tty/reader/line.rb#113
  def right(n = T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader/line.rb#255
  def size; end

  # source://tty-reader//lib/tty/reader/line.rb#90
  def start?; end

  # source://tty-reader//lib/tty/reader/line.rb#23
  def text; end

  # source://tty-reader//lib/tty/reader/line.rb#248
  def text_size; end

  # source://tty-reader//lib/tty/reader/line.rb#230
  def to_s; end

  class << self
    # source://tty-reader//lib/tty/reader/line.rb#17
    def sanitize(text); end
  end
end

# source://tty-reader//lib/tty/reader/line.rb#8
TTY::Reader::Line::ANSI_MATCHER = T.let(T.unsafe(nil), Regexp)

# source://tty-reader//lib/tty/reader/mode.rb#7
class TTY::Reader::Mode
  # source://tty-reader//lib/tty/reader/mode.rb#11
  def initialize(input = T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader/mode.rb#20
  def echo(is_on = T.unsafe(nil), &block); end

  # source://tty-reader//lib/tty/reader/mode.rb#33
  def raw(is_on = T.unsafe(nil), &block); end
end

# source://tty-reader//lib/tty/reader.rb#25
TTY::Reader::NEWLINE = T.let(T.unsafe(nil), Integer)

# source://tty-reader//lib/tty/reader/version.rb#5
TTY::Reader::VERSION = T.let(T.unsafe(nil), String)

# source://tty-reader//lib/tty/reader/win_console.rb#7
class TTY::Reader::WinConsole
  # source://tty-reader//lib/tty/reader/win_console.rb#26
  def initialize(input); end

  # source://tty-reader//lib/tty/reader/win_console.rb#24
  def escape_codes; end

  # source://tty-reader//lib/tty/reader/win_console.rb#45
  def get_char(echo: T.unsafe(nil), raw: T.unsafe(nil), nonblock: T.unsafe(nil)); end

  # source://tty-reader//lib/tty/reader/win_console.rb#72
  def get_char_blocking; end

  # source://tty-reader//lib/tty/reader/win_console.rb#76
  def get_char_echo_blocking; end

  # source://tty-reader//lib/tty/reader/win_console.rb#68
  def get_char_echo_non_blocking; end

  # source://tty-reader//lib/tty/reader/win_console.rb#64
  def get_char_non_blocking; end

  # source://tty-reader//lib/tty/reader/win_console.rb#85
  def input_ready?; end

  # source://tty-reader//lib/tty/reader/win_console.rb#17
  def keys; end
end

# source://tty-reader//lib/tty/reader/win_console.rb#8
TTY::Reader::WinConsole::ESC = T.let(T.unsafe(nil), String)

# source://tty-reader//lib/tty/reader/win_console.rb#10
TTY::Reader::WinConsole::EXT_HEX = T.let(T.unsafe(nil), String)

# source://tty-reader//lib/tty/reader/win_console.rb#9
TTY::Reader::WinConsole::NUL_HEX = T.let(T.unsafe(nil), String)
