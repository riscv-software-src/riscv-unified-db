# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `ruby-minisat` gem.
# Please instead update this file by running `bin/tapioca gem ruby-minisat`.


# THIS IS AN EMPTY RBI FILE.
# see https://github.com/Shopify/tapioca#manually-requiring-parts-of-a-gem

module MiniSat
  class Variable
    sig { returns(Literal) }
    def +@; end

    sig { returns(Literal) }
    def -@; end

    sig { returns(T::Boolean) }
    def value; end
  end
  class Literal
  end
  class Solver
    sig { params(term: T.any(Variable, Literal, T::Array[T.any(Variable, Literal)])).returns(Solver) }
    def <<(term); end

    sig { returns(Variable) }
    def new_var; end

    sig { params(v: T.any(Variable, Literal)).returns(Solver) }
    def add_clause(*v); end

    sig { params(v: Variable).returns(T::Boolean) }
    def [](v); end

    sig { returns(T::Boolean) }
    def solve; end

    sig { returns(T::Boolean) }
    def simplify; end

    sig { returns(T::Boolean) }
    def simplify_db; end

    sig { returns(Integer) }
    def var_size; end

    sig { returns(Integer) }
    def clause_size; end

    sig { override.returns(String) }
    def to_s; end

    sig { returns(T::Boolean) }
    def solved?; end

    sig { returns(T::Boolean) }
    def satisfied?; end
  end
end
