# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `treetop` gem.
# Please instead update this file by running `bin/tapioca gem treetop`.


# source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#1
class IntervalSkipList
  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#4
  def initialize; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#36
  def containing(n); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#64
  def delete(marker); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#14
  def empty?; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#18
  def expire(range, length_change); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#40
  def insert(range, marker); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#10
  def max_height; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#24
  def overlapping(range); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#2
  def probability; end

  protected

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#157
  def can_ascend_from?(node, level); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#161
  def can_descend_from?(level); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#112
  def containing_with_node(n); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#128
  def delete_node(key); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#134
  def find(key, path); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#100
  def head; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#102
  def insert_node(key); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#145
  def make_path; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#177
  def mark_forward_path_at_level(node, level, marker); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#169
  def next_node_at_level_inside_range?(node, level, range); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#173
  def next_node_at_level_outside_range?(node, level, range); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#149
  def next_node_height; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#165
  def node_inside_range?(node, range); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#191
  def nodes; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#100
  def ranges; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/interval_skip_list.rb#184
  def unmark_forward_path_at_level(node, level, marker); end
end

# source://treetop//lib/treetop/runtime/interval_skip_list/head_node.rb#2
class IntervalSkipList::HeadNode
  # source://treetop//lib/treetop/runtime/interval_skip_list/head_node.rb#5
  def initialize(height); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/head_node.rb#3
  def forward; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/head_node.rb#3
  def forward_markers; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/head_node.rb#3
  def height; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/head_node.rb#11
  def top_level; end
end

# source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#2
class IntervalSkipList::Node < ::IntervalSkipList::HeadNode
  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#6
  def initialize(key, height, path); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#15
  def all_forward_markers; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#19
  def delete(path); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#4
  def endpoint_of; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#3
  def key; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#3
  def key=(_arg0); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#4
  def markers; end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#26
  def propagate_length_change(length_change); end

  protected

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#74
  def can_be_promoted_higher?(marker, level); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#78
  def delete_marker_from_path(marker, level, terminus); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#92
  def demote_inbound_markers(path); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#87
  def demote_markers(path); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#120
  def demote_outbound_markers(path); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#139
  def forward_node_with_marker_at_or_above_level?(marker, level); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#155
  def place_marker_on_inbound_path(marker, level, terminus); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#146
  def place_marker_on_outbound_path(marker, level, terminus); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#43
  def promote_markers(path); end

  # source://treetop//lib/treetop/runtime/interval_skip_list/node.rb#36
  def update_forward_pointers(path); end
end

# source://treetop//lib/treetop/ruby_extensions/string.rb#1
class String
  include ::Comparable

  # source://treetop//lib/treetop/ruby_extensions/string.rb#2
  def column_of(index); end

  # source://treetop//lib/treetop/ruby_extensions/string.rb#12
  def line_of(index); end

  # source://treetop//lib/treetop/ruby_extensions/string.rb#17
  def tabto(n); end

  # source://treetop//lib/treetop/ruby_extensions/string.rb#31
  def treetop_camelize; end
end

# source://treetop//lib/treetop/runtime/compiled_parser.rb#1
module Treetop
  class << self
    # source://treetop//lib/treetop/compiler/grammar_compiler.rb#35
    def load(path); end

    # source://treetop//lib/treetop/compiler/grammar_compiler.rb#48
    def load_from_string(s); end
  end
end

# source://treetop//lib/treetop/compiler/lexical_address_space.rb#2
module Treetop::Compiler; end

# source://treetop//lib/treetop/compiler/grammar_compiler.rb#3
Treetop::Compiler::AUTOGENERATED = T.let(T.unsafe(nil), String)

# source://treetop//lib/treetop/compiler/node_classes/predicate.rb#26
class Treetop::Compiler::AndPredicate < ::Treetop::Compiler::Predicate
  # source://treetop//lib/treetop/compiler/node_classes/predicate.rb#31
  def when_failure; end

  # source://treetop//lib/treetop/compiler/node_classes/predicate.rb#27
  def when_success; end
end

# source://treetop//lib/treetop/compiler/node_classes/anything_symbol.rb#3
class Treetop::Compiler::AnythingSymbol < ::Treetop::Compiler::AtomicExpression
  # source://treetop//lib/treetop/compiler/node_classes/anything_symbol.rb#4
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/node_classes/anything_symbol.rb#21
  def expected; end

  # source://treetop//lib/treetop/compiler/node_classes/anything_symbol.rb#25
  def inline_module; end
end

# source://treetop//lib/treetop/compiler/node_classes/atomic_expression.rb#3
class Treetop::Compiler::AtomicExpression < ::Treetop::Compiler::ParsingExpression
  # source://treetop//lib/treetop/compiler/node_classes/atomic_expression.rb#4
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/node_classes/atomic_expression.rb#8
  def single_quote(string); end
end

# source://treetop//lib/treetop/compiler/node_classes/character_class.rb#3
class Treetop::Compiler::CharacterClass < ::Treetop::Compiler::AtomicExpression
  # source://treetop//lib/treetop/compiler/node_classes/character_class.rb#4
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/node_classes/character_class.rb#22
  def expected; end

  # source://treetop//lib/treetop/compiler/node_classes/character_class.rb#30
  def grounded_regexp(string); end

  # source://treetop//lib/treetop/compiler/node_classes/character_class.rb#26
  def inline_module; end
end

# source://treetop//lib/treetop/compiler/node_classes/choice.rb#3
class Treetop::Compiler::Choice < ::Treetop::Compiler::ParsingExpression
  # source://treetop//lib/treetop/compiler/node_classes/choice.rb#4
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/node_classes/choice.rb#12
  def compile_alternatives(alternatives, parent_expression); end

  # source://treetop//lib/treetop/compiler/node_classes/choice.rb#32
  def expected; end
end

# source://treetop//lib/treetop/compiler/node_classes/declaration_sequence.rb#3
class Treetop::Compiler::DeclarationSequence < ::Treetop::Runtime::SyntaxNode
  # source://treetop//lib/treetop/compiler/node_classes/declaration_sequence.rb#5
  def compile(builder); end

  # source://treetop//lib/treetop/compiler/node_classes/declaration_sequence.rb#19
  def rules; end
end

# source://treetop//lib/treetop/compiler/node_classes/grammar.rb#3
class Treetop::Compiler::Grammar < ::Treetop::Runtime::SyntaxNode
  # source://treetop//lib/treetop/compiler/node_classes/grammar.rb#4
  def compile; end

  # source://treetop//lib/treetop/compiler/node_classes/grammar.rb#19
  def indent_level; end

  # source://treetop//lib/treetop/compiler/node_classes/grammar.rb#23
  def parser_name; end
end

# source://treetop//lib/treetop/compiler/grammar_compiler.rb#4
class Treetop::Compiler::GrammarCompiler
  # source://treetop//lib/treetop/compiler/grammar_compiler.rb#5
  def compile(source_path, target_path = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/grammar_compiler.rb#18
  def ruby_source(source_path); end

  # source://treetop//lib/treetop/compiler/grammar_compiler.rb#23
  def ruby_source_from_string(s); end
end

# source://treetop//lib/treetop/compiler/node_classes/inline_module.rb#11
class Treetop::Compiler::InlineModule < ::Treetop::Runtime::SyntaxNode
  include ::Treetop::Compiler::InlineModuleMixin

  # source://treetop//lib/treetop/compiler/node_classes/inline_module.rb#15
  def compile(index, builder, rule); end

  # source://treetop//lib/treetop/compiler/node_classes/inline_module.rb#22
  def ruby_code; end
end

# source://treetop//lib/treetop/compiler/node_classes/inline_module.rb#3
module Treetop::Compiler::InlineModuleMixin
  # source://treetop//lib/treetop/compiler/node_classes/inline_module.rb#6
  def compile(index, builder, rule); end

  # source://treetop//lib/treetop/compiler/node_classes/inline_module.rb#4
  def module_name; end
end

# source://treetop//lib/treetop/compiler/lexical_address_space.rb#3
class Treetop::Compiler::LexicalAddressSpace
  # source://treetop//lib/treetop/compiler/lexical_address_space.rb#4
  def initialize; end

  # source://treetop//lib/treetop/compiler/lexical_address_space.rb#8
  def next_address; end

  # source://treetop//lib/treetop/compiler/lexical_address_space.rb#12
  def reset_addresses; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#6
module Treetop::Compiler::Metagrammar
  include ::Treetop::Runtime

  # source://treetop//lib/treetop/compiler/metagrammar.rb#4015
  def _nt_alpha_char; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#4039
  def _nt_alphanumeric_char; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1407
  def _nt_alternative; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3484
  def _nt_anything_symbol; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2493
  def _nt_atomic; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3264
  def _nt_bracket_expression; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3090
  def _nt_character_class; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1107
  def _nt_choice; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#4129
  def _nt_comment_to_eol; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#785
  def _nt_declaration; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#710
  def _nt_declaration_sequence; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2812
  def _nt_double_quoted_string; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#530
  def _nt_grammar; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#629
  def _nt_grammar_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#830
  def _nt_include_declaration; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3794
  def _nt_inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3902
  def _nt_keyword_inside_grammar; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1858
  def _nt_label; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1387
  def _nt_labeled_expression_sequence_body; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1762
  def _nt_labeled_sequence_primary; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#310
  def _nt_module_declaration; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#227
  def _nt_module_or_grammar; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1906
  def _nt_named_label; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2265
  def _nt_node_class_declarations; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3530
  def _nt_node_class_expression; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3970
  def _nt_non_space_char; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2626
  def _nt_nonterminal; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1972
  def _nt_null_label; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2357
  def _nt_occurrence_range; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2213
  def _nt_optional_suffix; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1702
  def _nt_optionally_labeled_sequence_primary; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2550
  def _nt_parenthesized_expression; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1031
  def _nt_parsing_expression; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#940
  def _nt_parsing_rule; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3751
  def _nt_predicate_block; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2437
  def _nt_prefix; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1589
  def _nt_primary; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2741
  def _nt_quoted_string; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2297
  def _nt_repetition_suffix; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#127
  def _nt_require_statement; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1228
  def _nt_sequence; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1260
  def _nt_sequence_body; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2086
  def _nt_sequence_primary; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2945
  def _nt_single_quoted_string; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#4077
  def _nt_space; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2181
  def _nt_suffix; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2687
  def _nt_terminal; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3692
  def _nt_trailing_inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#43
  def _nt_treetop_file; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1826
  def _nt_unlabeled_sequence_primary; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1318
  def _nt_variable_length_sequence_body; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#4210
  def _nt_white; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#9
  def root; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3261
module Treetop::Compiler::Metagrammar::BracketExpression0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3068
module Treetop::Compiler::Metagrammar::CharacterClass0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3071
module Treetop::Compiler::Metagrammar::CharacterClass1; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3074
module Treetop::Compiler::Metagrammar::CharacterClass2; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3077
module Treetop::Compiler::Metagrammar::CharacterClass3
  # source://treetop//lib/treetop/compiler/metagrammar.rb#3078
  def characters; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3084
module Treetop::Compiler::Metagrammar::CharacterClass4
  # source://treetop//lib/treetop/compiler/metagrammar.rb#3085
  def characters; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1069
module Treetop::Compiler::Metagrammar::Choice0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1070
  def alternative; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1075
module Treetop::Compiler::Metagrammar::Choice1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1076
  def head; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1080
  def tail; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1085
module Treetop::Compiler::Metagrammar::Choice2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1086
  def alternatives; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1102
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1098
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1094
  def parent_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1090
  def tail; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#4123
module Treetop::Compiler::Metagrammar::CommentToEol0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#4126
module Treetop::Compiler::Metagrammar::CommentToEol1; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#675
module Treetop::Compiler::Metagrammar::DeclarationSequence0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#680
  def declaration; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#676
  def space; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#685
module Treetop::Compiler::Metagrammar::DeclarationSequence1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#686
  def head; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#690
  def tail; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#695
module Treetop::Compiler::Metagrammar::DeclarationSequence2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#696
  def declarations; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#700
  def tail; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#705
module Treetop::Compiler::Metagrammar::DeclarationSequence3
  # source://treetop//lib/treetop/compiler/metagrammar.rb#706
  def compile(builder); end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2802
module Treetop::Compiler::Metagrammar::DoubleQuotedString0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2805
module Treetop::Compiler::Metagrammar::DoubleQuotedString1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2806
  def string; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#505
module Treetop::Compiler::Metagrammar::Grammar0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#506
  def space; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#511
module Treetop::Compiler::Metagrammar::Grammar1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#524
  def declaration_sequence; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#516
  def grammar_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#512
  def space1; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#520
  def space2; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#626
module Treetop::Compiler::Metagrammar::GrammarName0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#817
module Treetop::Compiler::Metagrammar::IncludeDeclaration0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#818
  def space; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#824
module Treetop::Compiler::Metagrammar::IncludeDeclaration1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#825
  def compile(builder); end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3788
module Treetop::Compiler::Metagrammar::InlineModule0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3791
module Treetop::Compiler::Metagrammar::InlineModule1; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3899
module Treetop::Compiler::Metagrammar::KeywordInsideGrammar0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1377
module Treetop::Compiler::Metagrammar::LabeledExpressionSequenceBody0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1378
  def head; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1382
  def tail; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1734
module Treetop::Compiler::Metagrammar::LabeledSequencePrimary0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1735
  def named_label; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1739
  def sequence_primary; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1744
module Treetop::Compiler::Metagrammar::LabeledSequencePrimary1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1745
  def compile(lexical_address, builder); end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1753
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1757
  def label_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1749
  def parent_modules; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#259
module Treetop::Compiler::Metagrammar::ModuleDeclaration0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#262
module Treetop::Compiler::Metagrammar::ModuleDeclaration1; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#265
module Treetop::Compiler::Metagrammar::ModuleDeclaration2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#270
  def name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#266
  def space1; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#274
  def space2; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#279
module Treetop::Compiler::Metagrammar::ModuleDeclaration3
  # source://treetop//lib/treetop/compiler/metagrammar.rb#280
  def space; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#286
module Treetop::Compiler::Metagrammar::ModuleDeclaration4
  # source://treetop//lib/treetop/compiler/metagrammar.rb#291
  def module_contents; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#287
  def module_prefix; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#295
  def suffix; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#300
module Treetop::Compiler::Metagrammar::ModuleDeclaration5
  # source://treetop//lib/treetop/compiler/metagrammar.rb#301
  def compile; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#305
  def parser_name; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1890
module Treetop::Compiler::Metagrammar::NamedLabel0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1891
  def alpha_char; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1897
module Treetop::Compiler::Metagrammar::NamedLabel1; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1900
module Treetop::Compiler::Metagrammar::NamedLabel2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1901
  def name; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2237
module Treetop::Compiler::Metagrammar::NodeClassDeclarations0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2238
  def node_class_expression; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2242
  def trailing_inline_module; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2247
module Treetop::Compiler::Metagrammar::NodeClassDeclarations1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2256
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2260
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2252
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2248
  def node_class_name; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3508
module Treetop::Compiler::Metagrammar::NodeClassExpression0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3511
module Treetop::Compiler::Metagrammar::NodeClassExpression1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#3512
  def space; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3518
module Treetop::Compiler::Metagrammar::NodeClassExpression2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#3519
  def node_class_name; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3524
module Treetop::Compiler::Metagrammar::NodeClassExpression3
  # source://treetop//lib/treetop/compiler/metagrammar.rb#3525
  def node_class_name; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3967
module Treetop::Compiler::Metagrammar::NonSpaceChar0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2616
module Treetop::Compiler::Metagrammar::Nonterminal0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2617
  def alpha_char; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2623
module Treetop::Compiler::Metagrammar::Nonterminal1; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1966
module Treetop::Compiler::Metagrammar::NullLabel0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1967
  def name; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2347
module Treetop::Compiler::Metagrammar::OccurrenceRange0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2352
  def max; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2348
  def min; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2531
module Treetop::Compiler::Metagrammar::ParenthesizedExpression0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2532
  def parsing_expression; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2538
module Treetop::Compiler::Metagrammar::ParenthesizedExpression1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2545
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2542
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2539
  def parent_modules; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#911
module Treetop::Compiler::Metagrammar::ParsingRule0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#912
  def space; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#917
module Treetop::Compiler::Metagrammar::ParsingRule1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#922
  def nonterminal; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#930
  def parsing_expression; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#918
  def space1; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#926
  def space2; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#934
  def space3; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3745
module Treetop::Compiler::Metagrammar::PredicateBlock0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#3746
  def inline_module; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1439
module Treetop::Compiler::Metagrammar::Primary0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1444
  def atomic; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1440
  def prefix; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1449
module Treetop::Compiler::Metagrammar::Primary1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1450
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1466
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1470
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1462
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1458
  def parent_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1454
  def prefixed_expression; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1475
module Treetop::Compiler::Metagrammar::Primary2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1480
  def atomic; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1476
  def prefix; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1485
module Treetop::Compiler::Metagrammar::Primary3
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1486
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1498
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1495
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1492
  def parent_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1489
  def prefixed_expression; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1503
module Treetop::Compiler::Metagrammar::Primary4
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1504
  def atomic; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1512
  def node_class_declarations; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1508
  def suffix; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1517
module Treetop::Compiler::Metagrammar::Primary5
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1518
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1541
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1545
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1537
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1529
  def node_class_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1525
  def optional_expression; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1533
  def parent_modules; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1550
module Treetop::Compiler::Metagrammar::Primary6
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1551
  def atomic; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1555
  def node_class_declarations; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1560
module Treetop::Compiler::Metagrammar::Primary7
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1561
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1580
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1584
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1576
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1568
  def node_class_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1572
  def parent_modules; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2725
module Treetop::Compiler::Metagrammar::QuotedString0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2730
  def modifiers; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2726
  def qs; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2735
module Treetop::Compiler::Metagrammar::QuotedString1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2736
  def string; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#120
module Treetop::Compiler::Metagrammar::RequireStatement0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#121
  def spacing; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1190
module Treetop::Compiler::Metagrammar::Sequence0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1195
  def node_class_declarations; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1191
  def sequence_body; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1200
module Treetop::Compiler::Metagrammar::Sequence1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1219
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1223
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1213
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1209
  def parent_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1201
  def sequence_elements; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1205
  def tail; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1997
module Treetop::Compiler::Metagrammar::SequencePrimary0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2002
  def atomic; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1998
  def prefix; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2007
module Treetop::Compiler::Metagrammar::SequencePrimary1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2008
  def compile(lexical_address, builder); end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2024
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2020
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2016
  def parent_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2012
  def prefixed_expression; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2029
module Treetop::Compiler::Metagrammar::SequencePrimary2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2034
  def atomic; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2030
  def prefix; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2039
module Treetop::Compiler::Metagrammar::SequencePrimary3
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2040
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2049
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2046
  def parent_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2043
  def prefixed_expression; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2054
module Treetop::Compiler::Metagrammar::SequencePrimary4
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2055
  def atomic; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2059
  def suffix; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2064
module Treetop::Compiler::Metagrammar::SequencePrimary5
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2065
  def compile(lexical_address, builder); end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2081
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2077
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2069
  def node_class_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#2073
  def parent_modules; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2935
module Treetop::Compiler::Metagrammar::SingleQuotedString0; end

# source://treetop//lib/treetop/compiler/metagrammar.rb#2938
module Treetop::Compiler::Metagrammar::SingleQuotedString1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#2939
  def string; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3652
module Treetop::Compiler::Metagrammar::TrailingInlineModule0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#3657
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3653
  def space; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3662
module Treetop::Compiler::Metagrammar::TrailingInlineModule1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#3670
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3666
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3663
  def parent_modules; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#3675
module Treetop::Compiler::Metagrammar::TrailingInlineModule2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#3683
  def inline_module; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3687
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3679
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#3676
  def parent_modules; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#13
module Treetop::Compiler::Metagrammar::TreetopFile0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#14
  def require_statement; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#19
module Treetop::Compiler::Metagrammar::TreetopFile1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#28
  def module_or_grammar; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#20
  def requires; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#24
  def spacing; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#32
  def suffix; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#37
module Treetop::Compiler::Metagrammar::TreetopFile2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#38
  def compile; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1794
module Treetop::Compiler::Metagrammar::UnlabeledSequencePrimary0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1795
  def null_label; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1799
  def sequence_primary; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1804
module Treetop::Compiler::Metagrammar::UnlabeledSequencePrimary1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1805
  def compile(lexical_address, builder); end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1813
  def inline_modules; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1817
  def label_name; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1809
  def parent_modules; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1292
module Treetop::Compiler::Metagrammar::VariableLengthSequenceBody0
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1297
  def optionally_labeled_sequence_primary; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1293
  def space; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1302
module Treetop::Compiler::Metagrammar::VariableLengthSequenceBody1
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1303
  def head; end

  # source://treetop//lib/treetop/compiler/metagrammar.rb#1307
  def tail; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#1312
module Treetop::Compiler::Metagrammar::VariableLengthSequenceBody2
  # source://treetop//lib/treetop/compiler/metagrammar.rb#1313
  def tail; end
end

# source://treetop//lib/treetop/compiler/metagrammar.rb#4236
class Treetop::Compiler::MetagrammarParser < ::Treetop::Runtime::CompiledParser
  include ::Treetop::Compiler::Metagrammar
end

# source://treetop//lib/treetop/compiler/node_classes/nonterminal.rb#3
class Treetop::Compiler::Nonterminal < ::Treetop::Compiler::AtomicExpression
  # source://treetop//lib/treetop/compiler/node_classes/nonterminal.rb#4
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/node_classes/nonterminal.rb#12
  def inline_module; end
end

# source://treetop//lib/treetop/compiler/node_classes/predicate.rb#36
class Treetop::Compiler::NotPredicate < ::Treetop::Compiler::Predicate
  # source://treetop//lib/treetop/compiler/node_classes/predicate.rb#44
  def when_failure; end

  # source://treetop//lib/treetop/compiler/node_classes/predicate.rb#37
  def when_success; end
end

# source://treetop//lib/treetop/compiler/node_classes/repetition.rb#72
class Treetop::Compiler::OccurrenceRange < ::Treetop::Compiler::Repetition
  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#95
  def clean_unsaturated; end

  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#73
  def compile(address, builder, parent_expression); end

  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#103
  def expected; end
end

# source://treetop//lib/treetop/compiler/node_classes/repetition.rb#50
class Treetop::Compiler::OneOrMore < ::Treetop::Compiler::Repetition
  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#51
  def compile(address, builder, parent_expression); end

  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#67
  def expected; end

  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#63
  def max; end
end

# source://treetop//lib/treetop/compiler/node_classes/optional.rb#3
class Treetop::Compiler::Optional < ::Treetop::Compiler::ParsingExpression
  # source://treetop//lib/treetop/compiler/node_classes/optional.rb#4
  def compile(address, builder, parent_expression); end
end

# source://treetop//lib/treetop/compiler/node_classes/parenthesized_expression.rb#3
class Treetop::Compiler::ParenthesizedExpression < ::Treetop::Compiler::ParsingExpression
  # source://treetop//lib/treetop/compiler/node_classes/parenthesized_expression.rb#4
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/node_classes/parenthesized_expression.rb#8
  def expected; end
end

# source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#3
class Treetop::Compiler::ParsingExpression < ::Treetop::Runtime::SyntaxNode
  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#65
  def accumulate_subexpression_result; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#45
  def accumulator_var; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#4
  def address; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#98
  def assign_failure(start_index_var); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#102
  def assign_lazily_instantiated_node; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#69
  def assign_result(value_ruby); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#138
  def begin_comment(expression); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#4
  def builder; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#6
  def compile(address, builder, parent_expression); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#16
  def declared_module_name; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#24
  def decorated?; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#142
  def end_comment(expression); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#94
  def epsilon_node; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#150
  def expected; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#73
  def extend_result(module_name); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#77
  def extend_result_with_declared_module; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#81
  def extend_result_with_inline_module(parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#130
  def init_value(var_symbol); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#20
  def inline_module_name; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#12
  def node_class_name; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#61
  def obtain_new_subexpression_address; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#146
  def on_one_line(expression); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#28
  def optional_arg(arg); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#4
  def parent_expression; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#90
  def reset_index; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#41
  def result_var; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#49
  def start_index_var; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#4
  def subexpression_address; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#53
  def subexpression_result_var; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#57
  def subexpression_success?; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#36
  def use_vars(*var_symbols); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#121
  def var(var_symbol); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#106
  def var_initialization; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_expression.rb#4
  def var_symbols; end
end

# source://treetop//lib/treetop/compiler/node_classes/parsing_rule.rb#3
class Treetop::Compiler::ParsingRule < ::Treetop::Runtime::SyntaxNode
  # source://treetop//lib/treetop/compiler/node_classes/parsing_rule.rb#5
  def compile(builder); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_rule.rb#10
  def compile_inline_module_declarations(builder); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_rule.rb#34
  def generate_cache_lookup(builder); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_rule.rb#47
  def generate_cache_storage(builder, result_var); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_rule.rb#17
  def generate_method_definition(builder); end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_rule.rb#51
  def method_name; end

  # source://treetop//lib/treetop/compiler/node_classes/parsing_rule.rb#55
  def name; end
end

# source://treetop//lib/treetop/compiler/node_classes/predicate.rb#3
class Treetop::Compiler::Predicate < ::Treetop::Compiler::ParsingExpression
  # source://treetop//lib/treetop/compiler/node_classes/predicate.rb#15
  def assign_failure; end

  # source://treetop//lib/treetop/compiler/node_classes/predicate.rb#20
  def assign_success; end

  # source://treetop//lib/treetop/compiler/node_classes/predicate.rb#4
  def compile(address, builder, parent_expression); end
end

# source://treetop//lib/treetop/compiler/node_classes/predicate_block.rb#3
class Treetop::Compiler::PredicateBlock < ::Treetop::Compiler::ParsingExpression
  # source://treetop//lib/treetop/compiler/node_classes/predicate_block.rb#4
  def compile(index, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/node_classes/predicate_block.rb#18
  def expected; end
end

# source://treetop//lib/treetop/compiler/node_classes/repetition.rb#3
class Treetop::Compiler::Repetition < ::Treetop::Compiler::ParsingExpression
  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#31
  def assign_and_extend_result(parent_expression); end

  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#4
  def compile(address, builder, parent_expression); end

  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#27
  def inline_module_name; end
end

# source://treetop//lib/treetop/compiler/ruby_builder.rb#5
class Treetop::Compiler::RubyBuilder
  # source://treetop//lib/treetop/compiler/ruby_builder.rb#9
  def initialize; end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#15
  def <<(ruby_line); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#60
  def accumulate(left, right); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#7
  def address_space; end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#48
  def assign(left, right); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#86
  def break; end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#30
  def class_declaration(name, &block); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#74
  def else_(&block); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#56
  def extend(var, module_name); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#69
  def if_(condition, &block); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#64
  def if__(condition, &block); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#90
  def in(depth = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#24
  def indented(depth = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#7
  def level; end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#80
  def loop(&block); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#42
  def method_declaration(name, &block); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#36
  def module_declaration(name, &block); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#20
  def newline; end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#100
  def next_address; end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#95
  def out(depth = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#104
  def reset_addresses; end

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#7
  def ruby; end

  private

  # source://treetop//lib/treetop/compiler/ruby_builder.rb#110
  def indent; end
end

# source://treetop//lib/treetop/compiler/node_classes/sequence.rb#3
class Treetop::Compiler::Sequence < ::Treetop::Compiler::ParsingExpression
  # source://treetop//lib/treetop/compiler/node_classes/sequence.rb#4
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/node_classes/sequence.rb#25
  def compile_sequence_elements(elements); end

  # source://treetop//lib/treetop/compiler/node_classes/sequence.rb#44
  def expected; end

  # source://treetop//lib/treetop/compiler/node_classes/sequence.rb#21
  def node_class_name; end

  # source://treetop//lib/treetop/compiler/node_classes/sequence.rb#36
  def sequence_element_accessor_module; end

  # source://treetop//lib/treetop/compiler/node_classes/sequence.rb#40
  def sequence_element_accessor_module_name; end
end

# source://treetop//lib/treetop/compiler/node_classes/sequence.rb#49
class Treetop::Compiler::SequenceElementAccessorModule
  include ::Treetop::Compiler::InlineModuleMixin

  # source://treetop//lib/treetop/compiler/node_classes/sequence.rb#53
  def initialize(sequence_elements); end

  # source://treetop//lib/treetop/compiler/node_classes/sequence.rb#57
  def compile(idx, builder, rule); end

  # source://treetop//lib/treetop/compiler/node_classes/sequence.rb#51
  def sequence_elements; end
end

# source://treetop//lib/treetop/compiler/node_classes/terminal.rb#3
class Treetop::Compiler::Terminal < ::Treetop::Compiler::AtomicExpression
  # source://treetop//lib/treetop/compiler/node_classes/terminal.rb#4
  def compile(address, builder, parent_expression = T.unsafe(nil)); end

  # source://treetop//lib/treetop/compiler/node_classes/terminal.rb#46
  def expected; end

  # source://treetop//lib/treetop/compiler/node_classes/terminal.rb#50
  def inline_module; end
end

# source://treetop//lib/treetop/compiler/node_classes/transient_prefix.rb#3
class Treetop::Compiler::TransientPrefix < ::Treetop::Compiler::ParsingExpression
  # source://treetop//lib/treetop/compiler/node_classes/transient_prefix.rb#4
  def compile(address, builder, parent_expression); end
end

# source://treetop//lib/treetop/compiler/node_classes/treetop_file.rb#3
class Treetop::Compiler::TreetopFile < ::Treetop::Runtime::SyntaxNode
  # source://treetop//lib/treetop/compiler/node_classes/treetop_file.rb#4
  def compile; end
end

# source://treetop//lib/treetop/compiler/node_classes/repetition.rb#38
class Treetop::Compiler::ZeroOrMore < ::Treetop::Compiler::Repetition
  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#39
  def compile(address, builder, parent_expression); end

  # source://treetop//lib/treetop/compiler/node_classes/repetition.rb#45
  def max; end
end

# source://treetop//lib/treetop/polyglot.rb#2
module Treetop::Polyglot; end

# source://treetop//lib/treetop/polyglot.rb#3
Treetop::Polyglot::VALID_GRAMMAR_EXT = T.let(T.unsafe(nil), Array)

# source://treetop//lib/treetop/polyglot.rb#4
Treetop::Polyglot::VALID_GRAMMAR_EXT_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://treetop//lib/treetop/runtime/compiled_parser.rb#2
module Treetop::Runtime; end

# source://treetop//lib/treetop/runtime/compiled_parser.rb#3
class Treetop::Runtime::CompiledParser
  include ::Treetop::Runtime

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#11
  def initialize; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#8
  def consume_all_input; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#8
  def consume_all_input=(_arg0); end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#8
  def consume_all_input?; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#38
  def failure_column; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#30
  def failure_index; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#34
  def failure_line; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#43
  def failure_reason; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#6
  def index; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#6
  def input; end

  # source://idlc/0.1.0/lib/idlc.rb#17
  def input_file; end

  # source://idlc/0.1.0/lib/idlc.rb#28
  def instantiate_node(node_type, *args); end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#6
  def max_terminal_failure_index; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#15
  def parse(input, options = T.unsafe(nil)); end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#7
  def root=(_arg0); end

  # source://idlc/0.1.0/lib/idlc.rb#19
  def set_input_file(filename, starting_line = T.unsafe(nil)); end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#54
  def terminal_failures; end

  protected

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#78
  def forget_failures_to_here; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#106
  def has_terminal?(terminal, mode, index); end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#98
  def idlc_instantiate_node(node_type, *args); end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#66
  def index=(_arg0); end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#65
  def input_length; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#65
  def node_cache; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#87
  def parse_anything(node_class = T.unsafe(nil), inline_module = T.unsafe(nil)); end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#68
  def prepare_to_parse(input); end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#83
  def reset_index; end

  # source://treetop//lib/treetop/runtime/compiled_parser.rb#120
  def terminal_parse_failure(expected_string, unexpected = T.unsafe(nil)); end
end

# source://treetop//lib/treetop/runtime/compiled_parser.rb#42
Treetop::Runtime::CompiledParser::OtherThan = T.let(T.unsafe(nil), String)

# source://treetop//lib/treetop/runtime/syntax_node.rb#3
class Treetop::Runtime::SyntaxNode
  # source://treetop//lib/treetop/runtime/syntax_node.rb#7
  def initialize(input, interval, elements = T.unsafe(nil)); end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#47
  def <=>(other); end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#98
  def dot_id; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#15
  def elements; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#43
  def empty?; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#51
  def extension_modules; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#4
  def input; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#91
  def inspect(indent = T.unsafe(nil)); end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#78
  def inspect_children(indent = T.unsafe(nil)); end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#63
  def inspect_self(indent = T.unsafe(nil)); end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#4
  def interval; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#35
  def nonterminal?; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#5
  def parent; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#5
  def parent=(_arg0); end

  # source://idlc/0.1.0/lib/idlc/syntax_node.rb#20
  sig { params(filename: T.nilable(::String), starting_line: ::Integer).void }
  def set_input_file(filename, starting_line = T.unsafe(nil)); end

  # source://idlc/0.1.0/lib/idlc/syntax_node.rb#39
  sig { params(filename: T.nilable(::String), starting_line: ::Integer).void }
  def set_input_file_unless_already_set(filename, starting_line = T.unsafe(nil)); end

  # source://idlc/0.1.0/lib/idlc/syntax_node.rb#30
  sig { returns(T::Boolean) }
  def space?; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#31
  def terminal?; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#39
  def text_value; end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#102
  def write_dot(io); end

  # source://treetop//lib/treetop/runtime/syntax_node.rb#113
  def write_dot_file(fname); end
end

# source://treetop//lib/treetop/runtime/terminal_parse_failure.rb#3
class Treetop::Runtime::TerminalParseFailure
  # source://treetop//lib/treetop/runtime/terminal_parse_failure.rb#6
  def initialize(index, expected_string, unexpected = T.unsafe(nil)); end

  # source://treetop//lib/treetop/runtime/terminal_parse_failure.rb#4
  def expected_string; end

  # source://treetop//lib/treetop/runtime/terminal_parse_failure.rb#4
  def index; end

  # source://treetop//lib/treetop/runtime/terminal_parse_failure.rb#12
  def to_s; end

  # source://treetop//lib/treetop/runtime/terminal_parse_failure.rb#4
  def unexpected; end
end
