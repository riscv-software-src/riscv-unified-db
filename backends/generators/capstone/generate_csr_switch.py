#!/usr/bin/env python3
"""
Generate a C function mapping RISC-V CSR numbers to names using a switch statement.
"""

import sys
import os

# Add parent directory to path to import generator.py
parent_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(parent_dir)

# Import functions from generator.py
from generator import load_csrs


def generate_csr_switch(csrs, output_file):
    with open(output_file, "w", encoding="utf-8") as f:
        fn_str = """// This file is auto-generated by riscv-unified-db
static const char *getCSRSystemRegisterName(unsigned CsrNo)
{
	switch (CsrNo) {
"""
        for addr, name in sorted(csrs.items()):
            fn_str += f'\tcase 0x{addr:04x}:\n\t\treturn "{name.lower()}";\n'

        fn_str += """	}
	return NULL;
}
"""
        f.write(fn_str)


def main():
    import argparse

    parser = argparse.ArgumentParser(description="Generate C switch for RISC-V CSRs")
    parser.add_argument(
        "--csr-dir",
        default=os.path.abspath(
            os.path.join(os.path.dirname(__file__), "../../../arch/csr/")
        ),
        help="Directory containing CSR YAML files",
    )
    parser.add_argument(
        "--extensions",
        default="",
        help="Comma-separated list of enabled extensions (default: all)",
    )
    parser.add_argument(
        "--arch",
        default="BOTH",
        choices=["RV32", "RV64", "BOTH"],
        help="Target architecture (RV32, RV64, BOTH)",
    )
    parser.add_argument(
        "--output",
        default=os.path.join(os.path.dirname(__file__), "csr_switch.c"),
        help="Output C file name",
    )
    args = parser.parse_args()

    enabled_extensions = (
        [ext.strip() for ext in args.extensions.split(",") if ext.strip()]
        if args.extensions
        else []
    )
    include_all = not enabled_extensions
    csrs = load_csrs(args.csr_dir, enabled_extensions, include_all, args.arch)

    generate_csr_switch(csrs, args.output)
    print(f"Generated: {args.output}")


if __name__ == "__main__":
    main()
