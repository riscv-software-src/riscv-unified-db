= Instruction Appendix
:doctype: book
:wavedrom: <%= $root %>/node_modules/.bin/wavedrom-cli
// Now the document header is complete and the wavedrom attribute is active.

<% instructions.sort_by(&:name).each do |inst| %>
<%= anchor_for_udb_doc_inst(inst.name) %>
== <%= inst.name %>

Synopsis::
<%= inst.long_name %>

<%- if inst.assembly.to_s.strip != "" -%>
Assembly::
<%= inst.fix_entities("#{inst.name.downcase} #{inst.assembly}") %>

<%- end -%>
Encoding::
<%- if inst.multi_encoding? -%>
[NOTE]
This instruction has different encodings in RV32 and RV64

RV32::
[wavedrom, ,svg,subs='attributes',width="100%"]
....
<%= inst.processed_wavedrom_desc(32) %>
....

RV64::
[wavedrom, ,svg,subs='attributes',width="100%"]
....
<%= inst.processed_wavedrom_desc(64) %>
....
<%- else -%>
[wavedrom, ,svg,subs='attributes',width="100%"]
....
<%= inst.processed_wavedrom_desc(inst.base.nil? ? 64 : inst.base) %>
....
<%- end -%>

Description::
<%= inst.fix_entities(inst.description) %>

Decode Variables::
<%- if inst.multi_encoding? ? (inst.decode_variables(32).empty? && inst.decode_variables(64).empty?) : inst.decode_variables(inst.base.nil? ? 64 : inst.base).empty? -%>
<%= inst.name %> has no decode variables.
<%- else -%>
<%- if inst.multi_encoding? -%>
<%- unless inst.decode_variables(32).empty? -%>
*RV32:*

[width="100%", cols="1,2", options="header"]
|===
|Variable Name |Location
<%- inst.decode_variables(32).each do |d| -%>
|<%= d.name %> |<%= d.extract %>
<%- end -%>
|===
<%- end -%>
<%- unless inst.decode_variables(64).empty? -%>

*RV64:*

[width="100%", cols="1,2", options="header"]
|===
|Variable Name |Location
<%- inst.decode_variables(64).each do |d| -%>
|<%= d.name %> |<%= d.extract %>
<%- end -%>
|===
<%- end -%>
<%- else -%>
[width="100%", cols="1,2", options="header"]
|===
|Variable Name |Location
<%- inst.decode_variables(inst.base.nil? ? 64 : inst.base).each do |d| -%>
|<%= d.name %> |<%= d.extract %>
<%- end -%>
|===
<%- end -%>
<%- end -%>

Included in::

<%- if inst.defining_extension_requirements.any? { |cond_ext_req| cond_ext_req.cond.satisfied_by_cfg_arch?(cfg_arch) != Udb::SatisfiedResult::Yes } -%>

|===
| Extension | Version | When

<%-   inst.defining_extension_requirements.each do |cond_ext_req| -%>
| *<%= cond_ext_req.ext_req.to_s_pretty %>*
| <%= inst.fix_entities(cond_ext_req.ext_req.to_s_pretty) %>
| <%= cond_ext_req.cond.to_asciidoc %>
<%-   end -%>
|===

<%- else -%>

|===
| Extension | Version

<%-   inst.defining_extension_requirements.each do |cond_ext_req| -%>
| *<%= cond_ext_req.ext_req.to_s_pretty %>*
| <%= inst.fix_entities(cond_ext_req.ext_req.to_s_pretty) %>
<%-   end -%>
|===

<%- end -%>
<%- end -%>
