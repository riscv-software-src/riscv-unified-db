#pragma once

#include <filesystem>
#include <string>

#include "udb/defines.hpp"

#if !defined(JSON_ASSERT)
#define JSON_ASSERT(cond) udb_assert(cond, "JSON assert");
#endif
#include <nlohmann/json.hpp>

#include "udb/bits-yaml.hpp"

#include "udb/db_data.hxx"

namespace udb {
  struct <%= name_of(:params, cfg_arch) %>
  {
    class Error : public std::runtime_error {
      public:
      explicit Error(const std::string& msg) : std::runtime_error(msg) {}
      explicit Error(const char* msg) : std::runtime_error(msg) {}
    };

    <%- cfg_arch.params.each do |param| -%>

    // <%= param.description.gsub("\n", "\n  // ") %>
    <%- if cfg_arch.param_values.key?(param.name) -%>
    static constexpr <%= name_of(:param, cfg_arch, param) %> <%= param.name %> = {};
    <%- else -%>
    <%= name_of(:param, cfg_arch, param) %> <%= param.name %>;
    <%- end -%>

    <%- end -%>

    // read parameters out of a YAML (or JSON) config file
    <%= name_of(:params, cfg_arch) %>(const Config& cfg)
    {
      <%- cfg_arch.params.each do |param| -%>
      <%- if cfg_arch.param_values.key?(param.name) -%>
      udb_assert(
        (std::any_cast<<%= param.idl_type.to_cxx_no_qualifiers %>>(cfg.param_value("<%= param.name %>")) == <%= param.name %>.value()),
        fmt::format("Paramter '<%= param.name %>' has built-in value '<%= cfg_arch.param_values.fetch(param.name) %>', but was given a run-time value of '{}'", std::any_cast<<%= param.idl_type.to_cxx_no_qualifiers %>>(cfg.param_value("<%= param.name %>")))
      );
      <%- else -%>
      if (<%= param.name %>.defined(cfg) == Yes) {
        udb_assert(cfg.has_param_value("<%= param.name %>"), "Required parameter value for '<%= param.name %>' is missing");
        <%= param.name %>.set_value(std::any_cast<<%= param.idl_type.to_cxx_no_qualifiers %>>(cfg.param_value("<%= param.name %>")));
      } else {
        udb_assert(!cfg.has_param_value("<%= param.name %>"), "'<%= param.name %>' is given a value in the config, but should not be defined");
      }
      <%- end -%>
      <%- end -%>
    }
  };
}
