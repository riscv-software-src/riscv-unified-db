# yaml-language-server: $schema=../../../../../schemas/inst_schema.json

$schema: inst_schema.json#
kind: instruction
name: qc.addusat
long_name: Saturating unsigned addition
description: |
  Add unsigned values `rs1` and `rs2`, saturate the unsigned result, and write to `rd`.
  Instruction encoded in R instruction format
definedBy:
  anyOf:
    - Xqci
    - Xqcia
base: 32
encoding:
  match: 0001111----------011-----0001011
  variables:
    - name: rs1
      location: 19-15
      not: 0
    - name: rs2
      location: 24-20
      not: 0
    - name: rd
      location: 11-7
      not: 0
assembly: " xd, xs1, xs2"
access:
  s: always
  u: always
  vs: always
  vu: always
operation(): |
  XReg sum = X[rs1] + X[rs2];

  # overflow occurs if the msb of at least one operand is 1 and the msb of the sum is not
  if ((X[rs1][xlen()-1] == 1) || (X[rs2][xlen()-1] == 1)) {
    if (sum[xlen()-1] == 0) {
      sum = ~{MXLEN{1'b0}}; # return largest number
    }
  }

  # otherwise, overflow did not occur
  X[rd] = sum;
