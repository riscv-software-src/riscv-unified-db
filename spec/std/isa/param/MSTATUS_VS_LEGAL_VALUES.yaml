# Copyright (c) Qualcomm Technologies, Inc. and/or its subsidiaries.
# SPDX-License-Identifier: BSD-3-Clause-Clear

# yaml-language-server: $schema=../../../schemas/param_schema.json

$schema: param_schema.json#
kind: parameter
name: MSTATUS_VS_LEGAL_VALUES
description: The set of values that mstatus.VS will accept from a software write.
long_name: TODO
schema:
  type: array
  items:
    type: integer
    enum:
      - 0
      - 1
      - 2
      - 3
  minItems: 1
  maxItems: 4
  uniqueItems: true
requirements:
  idl(): |
    # [RULE] If the v registers are implemented, the VS field shall not be read-only zero.
    implemented?(ExtensionName::V)
      -> $ary_size(MSTATUS_VS_LEGAL_VALUES) > 1;

    # [RULE] If there is a hardware update to mstatus.VS, then the Dirty state must be supported
    implemented?(ExtensionName::V) &&
    (HW_MSTATUS_VS_DIRTY_UPDATE == "precise" || HW_MSTATUS_VS_DIRTY_UPDATE == "imprecise")
      -> $array_includes?(MSTATUS_VS_LEGAL_VALUES, 0) &&
         $array_includes?(MSTATUS_VS_LEGAL_VALUES, 3)

  reason: |
    If V is supported, both Off (0) and Dirty (3) must be supported

    If there is a hardware update to mstatus.VS, then the Dirty state must be supported
definedBy:
  extension:
    anyOf:
      - name: V
      - name: S
