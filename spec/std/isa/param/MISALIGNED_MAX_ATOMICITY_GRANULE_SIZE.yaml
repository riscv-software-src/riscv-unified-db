# Copyright (c) Qualcomm Technologies, Inc. and/or its subsidiaries.
# SPDX-License-Identifier: BSD-3-Clause-Clear

# yaml-language-server: $schema=../../../schemas/param_schema.json

$schema: param_schema.json#
kind: parameter
name: MISALIGNED_MAX_ATOMICITY_GRANULE_SIZE
long_name: |
  The maximum granule size, in bytes, that the hart can atomically perform a
  misaligned load/store/AMO without raising a Misaligned exception
definedBy:
  allOf:
    - extension:
        name: Sm
    - param:
        name: MISALIGNED_LDST
        equal: true
        reason: Granule size is only relevant when misaligned load/stores might execute without an exception.
description: |
  When MISALIGNED_MAX_ATOMICITY_GRANULE_SIZE is 0, the hart
  cannot atomically perform a misaligned load/store/AMO. When a power of two, the hart can
  atomically load/store/AMO a misaligned access that is fully contained in a
  MISALIGNED_MAX_ATOMICITY_GRANULE_SIZE-aligned region.

  [NOTE]
  Even if the hart is capable of performing a misaligned load/store/AMO atomically,
  a misaligned exception may still occur if the access does not have the appropriate
  Misaligned Atomicity Granule PMA set.
schema:
  type: integer
  # can't be larger than a page, since there is no way to reconcile that with virtual memory
  enum: [0, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]
requirements:
  idl(): |
    (MISALIGNED_MAX_ATOMICITY_GRANULE_SIZE > 1) -> (MISALIGNED_LDST_EXCEPTION_PRIORITY == "low");
  reason:
    MISALIGNED_LDST_EXCEPTION_PRIORITY cannot be "high" when MISALIGNED_MAX_ATOMICITY_GRANULE_SIZE
    is non-zero, since the atomicity of an access cannot be determined in that case until after
    address translation.
