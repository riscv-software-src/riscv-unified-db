# Copyright (c) 2025 Kallal Mukherjee
# SPDX-License-Identifier: BSD-3-Clause-Clear

# yaml-language-server: $schema=../../../schemas/csr_schema.json

$schema: "csr_schema.json#"
kind: csr
name: mvip
long_name: Machine Virtual Interrupt Pending
address: 0x309
priv_mode: M
length: MXLEN
writable: true
description: |
  If a bit in mvien is read-only zero, the corresponding bit in mvip should also be read-only zero.
  Bits corresponding to unimplemented interrupt sources should be read-only zero.
definedBy: Smaia
fields:
  # Fields VSSIP, VSTIP, VSEIP are defined in the RISC-V AIA specification
  # Section 3.2.2 "Machine Virtual Interrupt Pending Register (mvip)"
  # These correspond to virtual supervisor software, timer, and external interrupts
  VSSIP:
    location: 1
    long_name: Virtual Supervisor Software Interrupt Pending
    description: |
      Virtual supervisor software pending.

      This bit can only be written if the corresponding VSSIE bit in mvien is writable and enabled.
    type: RW-R
    reset_value: UNDEFINED_LEGAL
    definedBy: Smaia
    sw_write(csr_value): |
      # Check if corresponding mvien bit is enabled
      if (CSR[mvien].VSSIE == 1'b1) {
        return csr_value.VSSIP;
      } else {
        return 0;  # Force to zero if mvien bit is disabled
      }
  VSTIP:
    location: 5
    long_name: Virtual Supervisor Timer Interrupt Pending
    description: |
      Virtual supervisor timer pending.

      This bit can only be written if the corresponding VSTIE bit in mvien is writable and enabled.
    type: RW-R
    reset_value: UNDEFINED_LEGAL
    definedBy: Smaia
    sw_write(csr_value): |
      # Check if corresponding mvien bit is enabled
      if (CSR[mvien].VSTIE == 1'b1) {
        return csr_value.VSTIP;
      } else {
        return 0;  # Force to zero if mvien bit is disabled
      }
  VSEIP:
    location: 9
    long_name: Virtual Supervisor External Interrupt Pending
    description: |
      Virtual supervisor external pending.

      This bit can only be written if the corresponding VSEIE bit in mvien is writable and enabled.
    type: RW-R
    reset_value: UNDEFINED_LEGAL
    definedBy: Smaia
    sw_write(csr_value): |
      # Check if corresponding mvien bit is enabled
      if (CSR[mvien].VSEIE == 1'b1) {
        return csr_value.VSEIP;
      } else {
        return 0;  # Force to zero if mvien bit is disabled
      }
  VOTHERPIP:
    location_rv32: 31-13
    location_rv64: 63-13
    long_name: Machine Other Virtual Interrupts Pending
    description: |
      Configurable virtual interrupt pending bits for interrupt numbers 13-63.

      The behavior of these bits follows the corresponding mvien bits. If a bit
      in mvien is read-only zero, the corresponding bit in mvip should also be
      read-only zero.

      This is a WARL register where the writable bits are determined by the
      MACHINE_VIRTUAL_INTERRUPTS configuration parameter.
    type: RW-R
    reset_value: UNDEFINED_LEGAL
    definedBy: Smaia
    sw_write(csr_value): |
      # Only allow writes to bits that are also writable in mvien
      # If a bit in mvien is read-only zero, the corresponding bit in mvip should also be read-only zero
      return csr_value.VOTHERPIP;
