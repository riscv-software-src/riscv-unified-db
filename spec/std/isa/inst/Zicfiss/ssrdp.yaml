# Copyright (c) Qualcomm Technologies, Inc. and/or its subsidiaries.
# SPDX-License-Identifier: BSD-3-Clause-Clear

# yaml-language-server: $schema=../../../../schemas/inst_schema.json

$schema: inst_schema.json#
kind: instruction
name: ssrdp
long_name: Read ssp into a Register
description: |
  Move the contents of ssp to a destination register.
definedBy: Zicfiss
assembly: xd
encoding:
  match: 11001101110000000100-----1110011
  variables:
    - name: xd
      location: 11-7
      not: 0
access:
  s: always
  u: always
  vs: always
  vu: always
data_independent_timing: false
operation(): |
  Bits<12> ssp_addr = 0x011;
  Csr csr_handle = direct_csr_lookup(ssp_addr);

  if (csr_handle.valid == false) {
    unimplemented_csr($encoding);
  } else if ((mode() < PrivilegeMode::M && CSR[menvcfg].SSE == 0) ||
             (mode() == PrivilegeMode::U && CSR[senvcfg].SSE == 0)) {
    raise(ExceptionCode::IllegalInstruction, mode(), $encoding);
  } else if ((mode() == PrivilegeMode::VS && CSR[henvcfg].SSE == 0) ||
             (mode() == PrivilegeMode::VU && (CSR[henvcfg].SSE == 0 || CSR[senvcfg].SSE == 0))) {
    raise(ExceptionCode::VirtualInstruction, mode(), $encoding);
  }

  if ((CSR[menvcfg].SSE == 1'b1) || (CSR[henvcfg].SSE == 1'b1) || (CSR[senvcfg].SSE == 1'b1)) {
    X[xd] = csr_sw_read(csr_handle);
  } else {
    X[xd] = 0;
  }
