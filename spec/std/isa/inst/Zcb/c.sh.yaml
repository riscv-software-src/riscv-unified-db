# Copyright (c) Qualcomm Technologies, Inc. and/or its subsidiaries.
# SPDX-License-Identifier: BSD-3-Clause-Clear

# yaml-language-server: $schema=../../../../schemas/inst_schema.json

$schema: "inst_schema.json#"
kind: instruction
name: c.sh
long_name: Store unsigned halfword, 16-bit encoding
description: |
  Stores a 16-bit value from register xs2 into memory.
  It computes an effective address by adding the zero-extended offset, to the base address in register xs1.
  It expands to `sh` `xs2, offset(xs1)`.
definedBy:
  anyOf:
    - Zcb
    - Zce
assembly: xs2, imm(xs1)
encoding:
  match: 100011---0----00
  variables:
    - name: imm
      location: 5
      left_shift: 1
    - name: xs2
      location: 4-2
    - name: xs1
      location: 9-7
access:
  s: always
  u: always
  vs: always
  vu: always
operation(): |
  if (implemented?(ExtensionName::C) && (CSR[misa].C == 1'b0)) {
    raise(ExceptionCode::IllegalInstruction, mode(), $encoding);
  }

  XReg virtual_address = X[creg2reg(xs1)] + imm;

  write_memory<16>(virtual_address, X[creg2reg(xs2)][15:0], $encoding);
