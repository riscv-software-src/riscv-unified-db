# Copyright (c) Qualcomm Technologies, Inc. and/or its subsidiaries.
# SPDX-License-Identifier: BSD-3-Clause-Clear

# yaml-language-server: $schema=../../../schemas/ext_schema.json

$schema: "ext_schema.json#"
kind: extension
name: I
type: unprivileged
long_name: Base integer ISA (RV32I or RV64I)
versions:
  - version: "2.1.0"
    state: ratified
    ratification_date: 2019-06
    changes:
      - ratified RVWMO memory model and exclusion of FENCE.I, counters, and CSR instructions that were in previous base ISA
description: |
  Base integer instructions -- TODO

normative_rules:
  - name: R-type_ops
  - name: x0eq0
  - name: imm_always_sex
  - name: pcreg
  - name: rv32i_other_xregs

  # RV32I (XLEN == 32)
  - name: rv32_xreg_sz
    # TODO: add "when" statement saying MXLEN == 32

  # RV64I (XLEN == 64)
  - name: rv64i_other_xregs
    # TODO: add "when" statement saying MXLEN == 64
  - name: rv64_xreg_sz
    # TODO: add "when" statement saying MXLEN == 64
  - name: rv64_w_sex
    # TODO: add "when" statement saying MXLEN == 64

  #CTI and LS
  - name: taken_cti_misaligned_exc
    # TODO: add "when" statement referencing the taken CTI instruction group
  - name: ldst_addr_misaligned_or_access_fault_exc
    # TODO: add "when" statement referencing the load/store instruction group
  - name: ldst_atomicity_for_aligned
    # TODO: add "when" statement referencing the load/store instruction group
  - name: big_endian_op
    # TODO: add "when" statement referencing the load/store instruction group
  - name: ldst_effective_addr
    # TODO: add "when" statement referencing the load/store instruction group
  - name: endian_byte_invariant
    # TODO: add "when" statement referencing the load/store instruction group
  - name: endian_byte_op
    # TODO: add "when" statement referencing the load/store instruction group
  - name: little_endian_op
    # TODO: add "when" statement referencing the load/store instruction group
  - name: ldst_no_exc_aligned
    # TODO: add "when" statement referencing the load/store instruction group
  - name: load_exc_x0
    # TODO: add "when" statement referencing the load instruction group
  - name: load_op
    # TODO: add "when" statement referencing the load instruction group
  - name: store_op
    # TODO: add "when" statement referencing the store instruction group
  - name: br_target
    # TODO: add "when" statement listing the branch instruction group
  - name: cond_br_no_ia_misaligned_exc_not_taken
  - name: cti_ia_fault_exc_on_target
  - name: no_cti_delay_slots
# params - TODO: Match existing parameter names defined by UDB.
# Also change name: to something like param:
  - name: endianness_little_or_big
  - name: misaligned_ldst_contained_or_fatal_trap
  - name: misaligned_ldst_eei_dependent_behavior
  - name: misaligned_ldst_fully_hw_supported
  - name: misaligned_ldst_fully_hw_supported_or_visible_trap
  - name: misaligned_ldst_hw_or_invisible_trap_func_of_addr
  - name: misaligned_ldst_invisible_trap
